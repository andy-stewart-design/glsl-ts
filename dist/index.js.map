{"version":3,"sources":["../src/validators.ts","../src/utils.ts","../src/warn.ts","../src/glsl-asset-manager.ts","../src/shaders.ts","../src/glsl-canvas.ts","../src/index.ts"],"sourcesContent":["import type { Vec2, Vec3, Vec4 } from \"./types\";\n\nfunction isNumber(value: unknown) {\n  return typeof value === \"number\";\n}\n\nfunction isString(value: unknown) {\n  return typeof value === \"string\";\n}\n\nfunction isBool(value: unknown) {\n  return typeof value === \"boolean\";\n}\n\nfunction isVec2(value: unknown): value is Vec2 {\n  return Array.isArray(value) && value.length === 2 && value.every(isNumber);\n}\n\nfunction isVec3(value: unknown): value is Vec3 {\n  return Array.isArray(value) && value.length === 3 && value.every(isNumber);\n}\n\nfunction isVec4(value: unknown): value is Vec4 {\n  return Array.isArray(value) && value.length === 4 && value.every(isNumber);\n}\n\nfunction isImageFile(fileName: string): boolean {\n  const imageExtensions = [\n    \".jpg\",\n    \".jpeg\",\n    \".png\",\n    \".gif\",\n    \".bmp\",\n    \".webp\",\n    \".svg\",\n    \".tiff\",\n    \".ico\",\n  ];\n  const lowerCaseFileName = fileName.toLowerCase();\n\n  return imageExtensions.some((ext) => lowerCaseFileName.endsWith(ext));\n}\n\nfunction isVideoFile(fileName: string): boolean {\n  const videoExtensions = [\n    \".mp4\",\n    \".avi\",\n    \".mov\",\n    \".mkv\",\n    \".wmv\",\n    \".flv\",\n    \".webm\",\n    \".ts\",\n  ];\n  const lowerCaseFileName = fileName.toLowerCase();\n\n  return videoExtensions.some((ext) => lowerCaseFileName.endsWith(ext));\n}\n\nexport {\n  isNumber,\n  isString,\n  isBool,\n  isVec2,\n  isVec3,\n  isVec4,\n  isImageFile,\n  isVideoFile,\n};\n","import type { UniformType, UniformValue } from \"./types\";\nimport { isImageFile, isVideoFile } from \"./validators\";\n\nfunction getContext(canvas: HTMLCanvasElement) {\n  const gl = canvas.getContext(\"webgl2\");\n\n  if (!gl) throw new Error(\"WebGL not supported\");\n\n  return gl;\n}\n\nfunction updateTexture(\n  gl: WebGL2RenderingContext,\n  texture?: HTMLImageElement | HTMLVideoElement\n) {\n  const { TEXTURE_2D, RGBA, UNSIGNED_BYTE } = gl;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n\n  if (!texture) {\n    gl.texImage2D(TEXTURE_2D, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE, pixel);\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, RGBA, RGBA, UNSIGNED_BYTE, texture);\n  }\n}\n\nfunction setTextureParams(\n  gl: WebGL2RenderingContext,\n  texture: HTMLImageElement | HTMLVideoElement\n) {\n  if (isPowerOf2(texture.width) && isPowerOf2(texture.height)) {\n    // Set parameters for power-of-2 textures\n    gl.generateMipmap(gl.TEXTURE_2D);\n  } else {\n    // Set parameters for non-power-of-2 textures\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  }\n}\n\n// Helper function to check if a number is a power of 2\nfunction isPowerOf2(value: number): boolean {\n  return value > 0 && (value & (value - 1)) === 0;\n}\n\ninterface ValidInferredUniform {\n  valid: true;\n  type: UniformType;\n  value: UniformValue;\n}\n\ninterface InvalidInferredUniform {\n  valid: false;\n  message: string;\n}\n\ntype InferredUniform = ValidInferredUniform | InvalidInferredUniform;\n\nfunction getUniformType(uniform: unknown): InferredUniform {\n  if (typeof uniform === \"string\") {\n    if (isImageFile(uniform)) {\n      return { valid: true, type: \"image\", value: uniform };\n    } else if (isVideoFile(uniform)) {\n      return { valid: true, type: \"video\", value: uniform };\n    } else if (uniform === \"webcam\") {\n      return { valid: true, type: \"webcam\", value: uniform };\n    } else if (!isNaN(Number(uniform)) && uniform.includes(\".\")) {\n      return { valid: true, type: \"float\", value: parseFloat(uniform) };\n    } else if (!isNaN(Number(uniform)) && !uniform.includes(\".\")) {\n      return { valid: true, type: \"int\", value: parseInt(uniform) };\n    } else {\n      return { valid: false, message: `Unknown uniform type: ${uniform}` };\n    }\n  } else if (Array.isArray(uniform)) {\n    if (uniform.length >= 2 && uniform.length <= 4) {\n      const type = `vec${uniform.length}` as \"vec2\" | \"vec3\" | \"vec4\";\n      return { valid: true, type, value: uniform };\n    } else {\n      return {\n        valid: false,\n        message: `Invalid vector length: ${uniform.length}`,\n      };\n    }\n  } else if (typeof uniform === \"number\") {\n    return { valid: true, type: \"float\", value: uniform };\n  } else if (typeof uniform === \"boolean\") {\n    return { valid: true, type: \"bool\", value: uniform };\n  } else {\n    return { valid: false, message: `Unknown uniform type: ${uniform}` };\n  }\n}\n\nfunction setUniformWarning(name: string, type: string) {\n  return `[GLSL.TS]: Couldn't update ${name}, value must be a ${type}`;\n}\n\ntype UniformCase = \"snake\" | \"camel\";\n\nfunction formatUniform(name: string, prefix: string, textCase: UniformCase) {\n  if (textCase === \"snake\") {\n    return `${prefix}_${name}`;\n  } else {\n    const ccName = name.charAt(0).toUpperCase() + name.slice(1);\n    return `${prefix}${ccName}`;\n  }\n}\n\nexport {\n  getContext,\n  updateTexture,\n  setTextureParams,\n  getUniformType,\n  formatUniform,\n  type UniformCase,\n};\n","function setUniformWarning(name: string, type: string) {\n  return `[GLSL.TS]: Couldn't update ${name}, value must be a ${type}`;\n}\n\nexport { setUniformWarning };\n","import {\n  getUniformType,\n  setTextureParams,\n  updateTexture,\n  formatUniform,\n  type UniformCase,\n} from \"./utils\";\nimport type { UniformType, UniformValue, UniformMap } from \"./types\";\nimport {\n  isBool,\n  isNumber,\n  isString,\n  isVec2,\n  isVec3,\n  isVec4,\n} from \"./validators\";\nimport { setUniformWarning } from \"./warn\";\n\ninterface WebGLUniform {\n  type: UniformType;\n  location: WebGLUniformLocation;\n}\n\ninterface StaticTexture {\n  asset: WebGLTexture;\n  unit: number;\n}\n\ninterface DynamicTexture extends StaticTexture {\n  video: HTMLVideoElement;\n}\n\nclass GlslAssetManager {\n  readonly gl: WebGL2RenderingContext;\n  readonly program: WebGLProgram;\n  readonly uniforms: Map<string, WebGLUniform> = new Map();\n  readonly staticTextures: Map<string, StaticTexture> = new Map();\n  readonly dynamicTextures: Map<string, DynamicTexture> = new Map();\n  readonly uniformPrefix: string = \"u\";\n  readonly uniformCase: UniformCase = \"snake\";\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    program: WebGLProgram,\n    initialUniforms: UniformMap,\n    uniformPrefix: string,\n    uniformCase: UniformCase\n  ) {\n    this.gl = gl;\n    this.program = program;\n    this.uniformPrefix = uniformPrefix;\n    this.uniformCase = uniformCase;\n\n    this.initializeDefaultUniforms();\n    this.initializeCustomUniforms(initialUniforms);\n  }\n\n  // UNIFORM METHODS ----------------------------------------------------\n\n  private initializeDefaultUniforms() {\n    const timeName = this.formatUniform(\"time\");\n    const timeLocation = this.gl.getUniformLocation(this.program, timeName);\n    if (timeLocation) {\n      this.uniforms.set(timeName, { type: \"float\", location: timeLocation });\n    }\n\n    const resName = this.formatUniform(\"resolution\");\n    const resLocation = this.gl.getUniformLocation(this.program, resName);\n    if (resLocation) {\n      this.uniforms.set(resName, { type: \"vec2\", location: resLocation });\n    }\n\n    const mouseName = this.formatUniform(\"mouse\");\n    const mouseLocation = this.gl.getUniformLocation(this.program, mouseName);\n    if (mouseLocation) {\n      this.uniforms.set(mouseName, { type: \"vec2\", location: mouseLocation });\n    }\n  }\n\n  private initializeCustomUniforms(uniforms: UniformMap) {\n    for (const [_name, val] of Object.entries(uniforms)) {\n      const name = this.formatUniform(_name);\n      const location = this.gl.getUniformLocation(this.program, name);\n      if (!location) {\n        console.warn(\n          `[GLSL.TS]: couldn't init uniform (${name}). Most likely, it was not used in shader and was optimized out.`\n        );\n        continue;\n      }\n\n      const inferred = getUniformType(val);\n\n      if (!inferred.valid) {\n        console.error(inferred.message);\n        continue;\n      }\n\n      this.uniforms.set(name, { type: inferred.type, location });\n      this.setUniformValue(_name, inferred.value);\n    }\n  }\n\n  public setUniformValue(_name: string, value: UniformValue) {\n    const name = this.formatUniform(_name);\n    const uni = this.uniforms.get(name);\n\n    if (!uni) {\n      console.warn(`[GLSL.TS]: uniform ${_name} not found`);\n      return;\n    }\n\n    const { type, location } = uni;\n\n    switch (type) {\n      case \"float\":\n        if (isNumber(value)) this.gl.uniform1f(location, value);\n        else console.warn(setUniformWarning(name, \"number\"));\n        break;\n\n      case \"vec2\":\n        if (isVec2(value)) this.gl.uniform2fv(location, value);\n        else console.warn(setUniformWarning(name, \"Vec2\"));\n        break;\n\n      case \"vec3\":\n        if (isVec3(value)) this.gl.uniform3fv(location, value);\n        else console.warn(setUniformWarning(name, \"Vec3\"));\n        break;\n\n      case \"vec4\":\n        if (isVec4(value)) this.gl.uniform4fv(location, value);\n        else console.warn(setUniformWarning(name, \"Vec4\"));\n        break;\n\n      case \"int\":\n        if (isNumber(value)) this.gl.uniform1i(location, value);\n        else console.warn(setUniformWarning(name, \"number\"));\n        break;\n\n      case \"bool\":\n        if (isBool(value)) this.gl.uniform1i(location, value ? 1 : 0);\n        else console.warn(setUniformWarning(name, \"boolean\"));\n        break;\n\n      case \"image\":\n        if (isString(value)) this.loadStaticTexture(name, value);\n        else console.warn(setUniformWarning(name, \"string\"));\n        break;\n\n      case \"video\":\n        if (isString(value)) this.loadDynamicTexture(name, value);\n        else console.warn(setUniformWarning(name, \"string\"));\n        break;\n\n      case \"webcam\":\n        this.loadDynamicTexture(name);\n        break;\n\n      default:\n        console.warn(`Unsupported uniform type for ${name}`);\n    }\n  }\n\n  public formatUniform(name: string) {\n    return formatUniform(name, this.uniformPrefix, this.uniformCase);\n  }\n\n  // TEXTURE METHODS ----------------------------------------------------\n\n  private getTextureUnit() {\n    return this.staticTextures.size + this.dynamicTextures.size;\n  }\n\n  private getUniformLocation(name: string) {\n    const location = this.gl.getUniformLocation(this.program, name);\n    if (!location) {\n      throw new Error(`Failed to retrieve unform loaction for ${name}`);\n    }\n    return location;\n  }\n\n  private initializeTexture(name: string) {\n    // Create a new texture\n    const location = this.getUniformLocation(name);\n    const texture = this.gl.createTexture();\n    const textureUnit = this.getTextureUnit();\n\n    // Set the sampler uniform to use the correct texture unit\n    this.gl.uniform1i(location, textureUnit);\n\n    // Use a placeholder pixel while the image loads\n    this.gl.activeTexture(this.gl.TEXTURE0 + textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    updateTexture(this.gl);\n\n    return [texture, textureUnit] as const;\n  }\n\n  private loadStaticTexture(name: string, url: string) {\n    const [texture, textureUnit] = this.initializeTexture(name);\n\n    // Track the texture\n    this.staticTextures.set(name, { asset: texture, unit: textureUnit });\n\n    // Load the image\n    const image = new Image();\n    image.crossOrigin = \"anonymous\";\n\n    image.onload = () => {\n      try {\n        const texture = this.staticTextures.get(name);\n        const sizeName =\n          this.uniformCase === \"snake\"\n            ? `${name}_resolution`\n            : `${name}Resolution`;\n        const sizeLocation = this.gl.getUniformLocation(this.program, sizeName);\n\n        if (texture) {\n          if (sizeLocation) {\n            this.uniforms.set(sizeName, {\n              type: \"vec2\",\n              location: sizeLocation,\n            });\n            this.gl.uniform2f(sizeLocation, image.width, image.height);\n          } else {\n            console.info(\n              `[GLSL.TS]: Could not set \"${sizeName}\" Uniform. Most likely, it was not used in shader and was optimized out.`\n            );\n          }\n\n          this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n          this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n          this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\n          setTextureParams(this.gl, image);\n          updateTexture(this.gl, image);\n\n          const location = this.getUniformLocation(name);\n          this.gl.uniform1i(location, texture.unit);\n        } else {\n          console.warn(`[GLSL.TS]: no texture found for name: ${name}`);\n        }\n      } catch (error) {\n        console.error(`[GLSL.TS]: error loading texture ${name}:`, error);\n      }\n    };\n\n    image.onerror = (error) => {\n      console.error(`[GLSL.TS]: error loading texture ${name}:`, error);\n    };\n\n    image.src = url;\n  }\n\n  private async loadDynamicTexture(name: string, url?: string) {\n    const video = document.createElement(\"video\");\n    video.muted = true;\n    video.autoplay = true;\n    video.playsInline = true;\n\n    video.onloadeddata = () => {\n      const [asset, unit] = this.initializeTexture(name);\n\n      // Track the texture\n      this.dynamicTextures.set(name, { video, asset, unit });\n\n      video.play();\n\n      try {\n        const texture = this.dynamicTextures.get(name);\n        const sizeName =\n          this.uniformCase === \"snake\"\n            ? `${name}_resolution`\n            : `${name}Resolution`;\n        const sizeLocation = this.gl.getUniformLocation(this.program, sizeName);\n        this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, true);\n\n        if (texture) {\n          if (sizeLocation) {\n            this.uniforms.set(sizeName, {\n              type: \"vec2\",\n              location: sizeLocation,\n            });\n            this.gl.uniform2f(\n              sizeLocation,\n              video.videoWidth,\n              video.videoHeight\n            );\n          } else {\n            console.info(\n              `[GLSL.TS]: Could not set \"${sizeName}\" Uniform. Most likely, it was not used in shader and was optimized out.`\n            );\n          }\n\n          this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n          this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n          setTextureParams(this.gl, texture.video);\n          updateTexture(this.gl, texture.video);\n        }\n      } catch (error) {\n        console.error(`Error loading texture ${name}:`, error);\n      }\n    };\n\n    video.onerror = () => {\n      console.error(`Failed to load texture: ${url}`);\n    };\n\n    if (!url) {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      video.srcObject = stream;\n    } else {\n      video.loop = true;\n      video.crossOrigin = \"anonymous\";\n      video.src = url;\n    }\n  }\n\n  public renderDynamicTextures() {\n    for (const texture of Array.from(this.dynamicTextures.values())) {\n      this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n      this.gl.texImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        this.gl.RGBA,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        texture.video\n      );\n    }\n  }\n\n  // LIFECYCLE METHODS ----------------------------------------------------\n\n  public destroy() {\n    this.staticTextures.forEach((txtr) => this.gl.deleteTexture(txtr.asset));\n    this.staticTextures.clear();\n    for (const texture of Array.from(this.dynamicTextures.values())) {\n      const src = texture.video.srcObject;\n      if (src instanceof MediaStream) {\n        src.getTracks().forEach((track) => track.stop());\n      } else {\n        texture.video.srcObject = null;\n      }\n    }\n    this.dynamicTextures.clear();\n  }\n}\n\nexport default GlslAssetManager;\n","const vertexShaderSourceV1 = `\n    attribute vec2 a_position;\n    void main() {\n      gl_Position = vec4(a_position, 0.0, 1.0);\n    }\n  `;\n\nconst vertexShaderSourceV3 = `#version 300 es\n    in vec2 a_position;\n    \n    void main() {\n      gl_Position = vec4(a_position, 0.0, 1.0);\n    }`;\n\nconst fragmentShaderSourceV1 = `\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform vec2 u_mouse;\n\n    void main() {\n      vec2 st = gl_FragCoord.xy / u_resolution;\n      vec2 mouse = u_mouse / u_resolution;\n\n      // Distance from the mouse\n      float dist = distance(st, mouse);\n      \n      // Color based on time and distance\n      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `;\n\nconst fragmentShaderSourceV3 = `#version 300 es\n    precision mediump float;\n\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform vec2 u_mouse;\n\n    void main() {\n      vec2 st = gl_FragCoord.xy / u_resolution;\n      vec2 mouse = u_mouse / u_resolution;\n\n      // Distance from the mouse\n      float dist = distance(st, mouse);\n      \n      // Color based on time and distance\n      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `;\n\nexport {\n  vertexShaderSourceV1,\n  fragmentShaderSourceV1,\n  vertexShaderSourceV3,\n  fragmentShaderSourceV3,\n};\n","import { getContext } from \"./utils\";\nimport {\n  fragmentShaderSourceV1,\n  vertexShaderSourceV1,\n  fragmentShaderSourceV3,\n  vertexShaderSourceV3,\n} from \"./shaders\";\n\nconst DEFAULT_VERTICES = new Float32Array([\n  -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1,\n]);\n\nclass GlslCanvas {\n  readonly container: HTMLElement;\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGL2RenderingContext;\n  readonly program: WebGLProgram;\n\n  constructor(container: HTMLElement, version: 1 | 3, frag?: string) {\n    this.container = container;\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.style.display = \"block\";\n    this.canvas.style.width = this.canvas.style.height = \"100%\";\n    this.container.appendChild(this.canvas);\n\n    this.gl = getContext(this.canvas);\n\n    this.gl.clearColor(0, 0, 0, 1);\n    if (\"drawingBufferColorSpace\" in this.gl) {\n      this.gl.drawingBufferColorSpace = \"display-p3\";\n    }\n    if (\"unpackColorSpace\" in this.gl) {\n      this.gl.unpackColorSpace = \"display-p3\";\n    }\n\n    const fShader =\n      version === 3 ? fragmentShaderSourceV3 : fragmentShaderSourceV1;\n    const vShader = version === 3 ? vertexShaderSourceV3 : vertexShaderSourceV1;\n\n    const vertexShader = this.compileShader(vShader, \"vert\");\n    const fragmentShader = this.compileShader(frag ?? fShader, \"frag\");\n\n    this.program = this.createProgram(vertexShader, fragmentShader);\n    this.gl.useProgram(this.program);\n    this.createBuffer(DEFAULT_VERTICES);\n\n    const a_Position = this.gl.getAttribLocation(this.program, \"a_position\");\n    this.gl.enableVertexAttribArray(a_Position);\n    this.gl.vertexAttribPointer(a_Position, 2, this.gl.FLOAT, false, 0, 0);\n  }\n\n  private compileShader(source: string, type: \"frag\" | \"vert\") {\n    const shader = this.gl.createShader(\n      type === \"frag\" ? this.gl.FRAGMENT_SHADER : this.gl.VERTEX_SHADER\n    );\n    if (!shader) throw new Error(\"Shader creation failed\");\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const message = `Shader compilation error: ${this.gl.getShaderInfoLog(\n        shader\n      )}`;\n      this.gl.deleteShader(shader);\n      throw new Error(message);\n    }\n\n    return shader;\n  }\n\n  private createProgram(\n    vertexShader: WebGLShader,\n    fragmentShader: WebGLShader\n  ) {\n    const program = this.gl.createProgram();\n    this.gl.attachShader(program, vertexShader);\n    this.gl.attachShader(program, fragmentShader);\n    this.gl.linkProgram(program);\n\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n      throw new Error(\n        `Program linking error: ${this.gl.getProgramInfoLog(program)}`\n      );\n    }\n\n    return program;\n  }\n\n  private createBuffer(data: Float32Array) {\n    const buffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, data, this.gl.STATIC_DRAW);\n    return buffer;\n  }\n\n  public resizeCanvas() {\n    const rect = this.container.getBoundingClientRect();\n    this.canvas.width = rect.width;\n    this.canvas.height = rect.height;\n  }\n\n  public destroy() {\n    this.container.innerHTML = \"\";\n  }\n}\n\nexport default GlslCanvas;\nexport { DEFAULT_VERTICES };\n","import GlslAssetManager from \"./glsl-asset-manager\";\nimport GlslCanvas, { DEFAULT_VERTICES } from \"./glsl-canvas\";\nimport type { UniformValue, UniformMap } from \"./types\";\nimport { getUniformType, type UniformCase } from \"./utils\";\n\ninterface ShdrConstructorProps {\n  container: HTMLElement;\n  frag?: string;\n  uniforms?: UniformMap;\n  uniformPrefix?: string;\n  uniformCase?: UniformCase;\n  glVersion?: 1 | 3;\n}\n\nexport default class Shdr extends GlslCanvas {\n  private mousePos = [0, 0];\n  private controller = new AbortController();\n  private rafId: number | null = null;\n  private startTime: number | null = null;\n  private pauseStartTime: number | null = null;\n  private lastRenderTime: number = 0;\n  private totalPausedTime: number = 0;\n  private assets: GlslAssetManager;\n\n  constructor({\n    container,\n    frag,\n    uniforms = {},\n    uniformPrefix = \"u\",\n    uniformCase = \"snake\",\n    glVersion = 3,\n  }: ShdrConstructorProps) {\n    super(container, glVersion, frag);\n    this.assets = new GlslAssetManager(\n      this.gl,\n      this.program,\n      uniforms,\n      uniformPrefix,\n      uniformCase\n    );\n\n    this.handleResize();\n    this.addEventListeners();\n  }\n\n  private render(time: number, loop = true) {\n    // if (this.paused || this.startTime === null) return;\n    if (this.startTime === null) return;\n\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    this.lastRenderTime = time;\n\n    // Pass uniforms\n    const uTime = this.assets.uniforms.get(this.assets.formatUniform(\"time\"));\n    if (uTime) {\n      // Calculate elapsed time with pause compensation\n      const adjustedTimestamp = time - this.totalPausedTime;\n      const elapsedTime = adjustedTimestamp - this.startTime;\n      this.gl.uniform1f(uTime.location, elapsedTime * 0.001); // Time in seconds\n    }\n    const uMouse = this.assets.uniforms.get(this.assets.formatUniform(\"mouse\"));\n    if (uMouse) {\n      this.gl.uniform2f(uMouse.location, this.mousePos[0], this.mousePos[1]);\n    }\n\n    // render dynamic textures\n    this.assets.renderDynamicTextures();\n\n    // Draw\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, DEFAULT_VERTICES.length / 2);\n\n    if (loop) {\n      this.rafId = requestAnimationFrame((t) => this.render(t));\n    }\n  }\n\n  private handleResize() {\n    super.resizeCanvas();\n\n    const resName = this.assets.formatUniform(\"resolution\");\n    const resUnif = this.assets.uniforms.get(resName) ?? null;\n\n    if (!resUnif) {\n      console.warn(\n        `Could not find resolution uniform (${resName}) location when resizing canvas`\n      );\n      return;\n    }\n\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.gl.uniform2f(resUnif.location, this.canvas.width, this.canvas.height);\n\n    this.render(this.lastRenderTime, false);\n  }\n\n  private addEventListeners() {\n    const { signal } = this.controller;\n\n    this.canvas.addEventListener(\n      \"mousemove\",\n      (event) => {\n        const rect = this.canvas.getBoundingClientRect();\n        this.mousePos[0] = event.clientX - rect.left;\n        this.mousePos[1] = rect.height - (event.clientY - rect.top); // Flip Y-axis\n      },\n      { signal }\n    );\n\n    this.canvas.addEventListener(\n      \"touchmove\",\n      (event) => {\n        const { clientX, clientY } = event.touches[0];\n        const rect = this.canvas.getBoundingClientRect();\n        this.mousePos[0] = clientX - rect.left;\n        this.mousePos[1] = rect.height - (clientY - rect.top); // Flip Y-axis\n      },\n      { signal }\n    );\n\n    window.addEventListener(\"resize\", () => this.handleResize(), { signal });\n  }\n\n  public play(loop = true) {\n    if (!this.paused) return;\n\n    if (this.pauseStartTime !== null) {\n      this.totalPausedTime += performance.now() - this.pauseStartTime;\n      this.pauseStartTime = null;\n    } else {\n      this.totalPausedTime = performance.now();\n    }\n\n    if (this.startTime === null) {\n      this.startTime = performance.now();\n    }\n\n    if (this.assets.dynamicTextures.size > 0) {\n      this.assets.dynamicTextures.forEach((texture) => {\n        texture.video.play();\n      });\n    }\n\n    if (loop) {\n      this.rafId = requestAnimationFrame((t) => this.render(t, loop));\n    } else {\n      this.render(performance.now(), loop);\n    }\n  }\n\n  public pause() {\n    if (typeof this.rafId !== \"number\" || this.paused) return;\n\n    this.pauseStartTime = performance.now();\n\n    cancelAnimationFrame(this.rafId);\n    this.rafId = null;\n\n    if (this.assets.dynamicTextures.size > 0) {\n      this.assets.dynamicTextures.forEach((texture) => {\n        texture.video.pause();\n      });\n    }\n  }\n\n  public updateUniform(name: string, value: UniformValue) {\n    const inferred = getUniformType(value);\n\n    if (!inferred.valid) {\n      console.warn(inferred.message);\n      return;\n    }\n\n    this.assets.setUniformValue(name, inferred.value);\n  }\n\n  public destroy() {\n    super.destroy();\n    this.assets.destroy();\n    this.controller.abort();\n  }\n\n  get paused() {\n    return this.rafId === null;\n  }\n\n  get uniforms() {\n    const _uniformData = Object.fromEntries(this.assets.uniforms);\n    const uniformData = Object.entries(_uniformData);\n    const uniformValuesArray = uniformData.map(([name, { location, type }]) => {\n      switch (type) {\n        case \"vec2\":\n        case \"vec3\":\n        case \"vec4\":\n          const vecValue = this.gl.getUniform(this.program, location);\n          return [name, Array.from(vecValue)];\n        case \"image\":\n          const imgValue = this.assets.staticTextures.get(name);\n          return [name, imgValue?.asset];\n        case \"video\":\n        case \"webcam\":\n          const vidValue = this.assets.dynamicTextures.get(name);\n          return [name, vidValue?.asset];\n        default:\n          const value = this.gl.getUniform(this.program, location);\n          return [name, value];\n      }\n    });\n    return Object.fromEntries(uniformValuesArray);\n  }\n}\n"],"mappings":"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","names":["isNumber","value","isString","isBool","isVec2","isVec3","isVec4","isImageFile","fileName","imageExtensions","lowerCaseFileName","ext","isVideoFile","videoExtensions","getContext","canvas","gl","updateTexture","texture","TEXTURE_2D","RGBA","UNSIGNED_BYTE","pixel","setTextureParams","isPowerOf2","value","getUniformType","uniform","isImageFile","isVideoFile","formatUniform","name","prefix","textCase","ccName","setUniformWarning","name","type","GlslAssetManager","gl","program","initialUniforms","uniformPrefix","uniformCase","timeName","timeLocation","resName","resLocation","mouseName","mouseLocation","uniforms","_name","val","name","location","inferred","getUniformType","value","uni","type","isNumber","setUniformWarning","isVec2","isVec3","isVec4","isBool","isString","formatUniform","texture","textureUnit","updateTexture","url","image","sizeName","sizeLocation","setTextureParams","error","video","asset","unit","stream","txtr","src","track","glsl_asset_manager_default","vertexShaderSourceV1","vertexShaderSourceV3","fragmentShaderSourceV1","fragmentShaderSourceV3","DEFAULT_VERTICES","GlslCanvas","container","version","frag","getContext","fShader","fragmentShaderSourceV3","fragmentShaderSourceV1","vShader","vertexShaderSourceV3","vertexShaderSourceV1","vertexShader","fragmentShader","a_Position","source","type","shader","message","program","data","buffer","rect","glsl_canvas_default","Shdr","glsl_canvas_default","container","frag","uniforms","uniformPrefix","uniformCase","glVersion","glsl_asset_manager_default","time","loop","uTime","elapsedTime","uMouse","DEFAULT_VERTICES","t","resName","resUnif","signal","event","rect","clientX","clientY","texture","name","value","inferred","getUniformType","_uniformData","uniformValuesArray","location","type","vecValue","imgValue","vidValue"]}