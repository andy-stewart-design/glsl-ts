{"version":3,"sources":["../src/validators.ts","../src/utils.ts","../src/glsl-asset-manager.ts","../src/shaders.ts","../src/glsl-canvas.ts","../src/index.ts"],"sourcesContent":["import type { Vec2, Vec3, Vec4 } from \"./types\";\n\nfunction isNumber(value: unknown) {\n  return typeof value === \"number\";\n}\n\nfunction isString(value: unknown) {\n  return typeof value === \"string\";\n}\n\nfunction isBool(value: unknown) {\n  return typeof value === \"boolean\";\n}\n\nfunction isVec2(value: unknown): value is Vec2 {\n  return Array.isArray(value) && value.length === 2 && value.every(isNumber);\n}\n\nfunction isVec3(value: unknown): value is Vec3 {\n  return Array.isArray(value) && value.length === 3 && value.every(isNumber);\n}\n\nfunction isVec4(value: unknown): value is Vec4 {\n  return Array.isArray(value) && value.length === 4 && value.every(isNumber);\n}\n\nfunction isImageFile(fileName: string): boolean {\n  const imageExtensions = [\n    \".jpg\",\n    \".jpeg\",\n    \".png\",\n    \".gif\",\n    \".bmp\",\n    \".webp\",\n    \".svg\",\n    \".tiff\",\n    \".ico\",\n  ];\n  const lowerCaseFileName = fileName.toLowerCase();\n\n  return imageExtensions.some((ext) => lowerCaseFileName.endsWith(ext));\n}\n\nfunction isVideoFile(fileName: string): boolean {\n  const videoExtensions = [\n    \".mp4\",\n    \".avi\",\n    \".mov\",\n    \".mkv\",\n    \".wmv\",\n    \".flv\",\n    \".webm\",\n    \".ts\",\n  ];\n  const lowerCaseFileName = fileName.toLowerCase();\n\n  return videoExtensions.some((ext) => lowerCaseFileName.endsWith(ext));\n}\n\nexport {\n  isNumber,\n  isString,\n  isBool,\n  isVec2,\n  isVec3,\n  isVec4,\n  isImageFile,\n  isVideoFile,\n};\n","import type { UniformType } from \"./types\";\nimport { isImageFile, isVideoFile } from \"./validators\";\n\nfunction getContext(canvas: HTMLCanvasElement) {\n  const gl = canvas.getContext(\"webgl2\");\n\n  if (!gl) throw new Error(\"WebGL not supported\");\n\n  return gl;\n}\n\nfunction updateTexture(\n  gl: WebGL2RenderingContext,\n  texture?: HTMLImageElement | HTMLVideoElement\n) {\n  const { TEXTURE_2D, RGBA, UNSIGNED_BYTE } = gl;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n\n  if (!texture) {\n    gl.texImage2D(TEXTURE_2D, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE, pixel);\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, RGBA, RGBA, UNSIGNED_BYTE, texture);\n  }\n}\n\nfunction setTextureParams(\n  gl: WebGL2RenderingContext,\n  texture: HTMLImageElement | HTMLVideoElement\n) {\n  if (isPowerOf2(texture.width) && isPowerOf2(texture.height)) {\n    // Set parameters for power-of-2 textures\n    gl.generateMipmap(gl.TEXTURE_2D);\n  } else {\n    // Set parameters for non-power-of-2 textures\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  }\n}\n\n// Helper function to check if a number is a power of 2\nfunction isPowerOf2(value: number): boolean {\n  return value > 0 && (value & (value - 1)) === 0;\n}\n\ninterface ValidInferredUniform {\n  valid: true;\n  type: UniformType;\n}\n\ninterface InvalidInferredUniform {\n  valid: false;\n  message: string;\n}\n\ntype InferredUniform = ValidInferredUniform | InvalidInferredUniform;\n\nfunction getUniformType(uniform: unknown): InferredUniform {\n  if (typeof uniform === \"string\") {\n    if (isImageFile(uniform)) {\n      return { valid: true, type: \"image\" };\n    } else if (isVideoFile(uniform)) {\n      return { valid: true, type: \"video\" };\n    } else if (uniform === \"webcam\") {\n      return { valid: true, type: \"webcam\" };\n    } else if (!isNaN(Number(uniform)) && uniform.includes(\".\")) {\n      return { valid: true, type: \"float\" };\n    } else if (!isNaN(Number(uniform)) && !uniform.includes(\".\")) {\n      return { valid: true, type: \"int\" };\n    } else {\n      return { valid: false, message: `Unknown uniform type: ${uniform}` };\n    }\n  } else if (Array.isArray(uniform)) {\n    if (uniform.length >= 2 && uniform.length <= 4) {\n      const type = `vec${uniform.length}` as \"vec2\" | \"vec3\" | \"vec4\";\n      return { valid: true, type };\n    } else {\n      return {\n        valid: false,\n        message: `Invalid vector length: ${uniform.length}`,\n      };\n    }\n  } else if (typeof uniform === \"number\") {\n    return { valid: true, type: \"float\" };\n  } else if (typeof uniform === \"boolean\") {\n    return { valid: true, type: \"bool\" };\n  } else {\n    return { valid: false, message: `Unknown uniform type: ${uniform}` };\n  }\n}\n\nexport { getContext, updateTexture, setTextureParams, getUniformType };\n","import { getUniformType, setTextureParams, updateTexture } from \"./utils\";\nimport type { UniformType, UniformValue, UniformMap } from \"./types\";\nimport {\n  isBool,\n  isNumber,\n  isString,\n  isVec2,\n  isVec3,\n  isVec4,\n} from \"./validators\";\n\ninterface WebGLUniform {\n  type: UniformType;\n  location: WebGLUniformLocation;\n}\n\ninterface StaticTexture {\n  asset: WebGLTexture;\n  unit: number;\n}\n\ninterface DynamicTexture extends StaticTexture {\n  video: HTMLVideoElement;\n}\n\nclass GlslAssetManager {\n  readonly gl: WebGL2RenderingContext;\n  readonly program: WebGLProgram;\n  readonly uniforms: Map<string, WebGLUniform> = new Map();\n  readonly staticTextures: Map<string, StaticTexture> = new Map();\n  readonly dynamicTextures: Map<string, DynamicTexture> = new Map();\n  readonly uniformPrefix: string = \"u_\";\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    program: WebGLProgram,\n    initialUniforms: UniformMap,\n    uniformPrefix: string\n  ) {\n    this.gl = gl;\n    this.program = program;\n    this.uniformPrefix = uniformPrefix;\n\n    this.initializeDefaultUniforms();\n    this.initializeCustomUniforms(initialUniforms);\n  }\n\n  // UNIFORM METHODS ----------------------------------------------------\n\n  private initializeDefaultUniforms() {\n    const uTime = this.gl.getUniformLocation(\n      this.program,\n      `${this.uniformPrefix}time`\n    );\n    if (uTime) {\n      this.uniforms.set(`${this.uniformPrefix}time`, {\n        type: \"float\",\n        location: uTime,\n      });\n    }\n\n    const uRes = this.gl.getUniformLocation(\n      this.program,\n      `${this.uniformPrefix}resolution`\n    );\n    if (uRes) {\n      this.uniforms.set(`${this.uniformPrefix}resolution`, {\n        type: \"vec2\",\n        location: uRes,\n      });\n    }\n\n    const uMouse = this.gl.getUniformLocation(\n      this.program,\n      `${this.uniformPrefix}mouse`\n    );\n    if (uMouse) {\n      this.uniforms.set(`${this.uniformPrefix}mouse`, {\n        type: \"vec2\",\n        location: uMouse,\n      });\n    }\n  }\n\n  private initializeCustomUniforms(uniforms: UniformMap) {\n    for (const [name, val] of Object.entries(uniforms)) {\n      const location = this.gl.getUniformLocation(\n        this.program,\n        `${this.uniformPrefix}${name}`\n      );\n      if (!location) {\n        console.warn(`Couldn't init uniform (${name}). Did you set it?`);\n        continue;\n      }\n\n      const inferred = getUniformType(val);\n\n      if (!inferred.valid) {\n        console.error(inferred.message);\n        continue;\n      }\n\n      this.uniforms.set(name, { type: inferred.type, location });\n\n      this.setUniformValue(name, val);\n    }\n  }\n\n  public setUniformValue(_name: string, value: UniformValue) {\n    const uni = this.uniforms.get(_name);\n    if (!uni) {\n      console.warn(`Uniform ${_name} not found`);\n      return;\n    }\n\n    const name = `${this.uniformPrefix}${_name}`;\n\n    const { type, location } = uni;\n\n    switch (type) {\n      case \"float\":\n        if (isNumber(value)) this.gl.uniform1f(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a number`);\n        break;\n\n      case \"vec2\":\n        if (isVec2(value)) this.gl.uniform2fv(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a Vec2`);\n        break;\n\n      case \"vec3\":\n        if (isVec3(value)) this.gl.uniform3fv(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a Vec3`);\n        break;\n\n      case \"vec4\":\n        if (isVec4(value)) this.gl.uniform4fv(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a Vec4`);\n        break;\n\n      case \"int\":\n        if (isNumber(value)) this.gl.uniform1i(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a number`);\n        break;\n\n      case \"bool\":\n        if (isBool(value)) this.gl.uniform1i(location, value ? 1 : 0);\n        else console.warn(`Couldn't update ${name}, value must be a boolean`);\n        break;\n\n      case \"image\":\n        if (isString(value)) this.loadStaticTexture(name, value);\n        else console.warn(`Couldn't update ${name}, value must be a string`);\n        break;\n\n      case \"video\":\n        if (isString(value)) this.loadDynamicTexture(name, value);\n        else console.warn(`Couldn't update ${name}, value must be a string`);\n        break;\n\n      case \"webcam\":\n        this.loadDynamicTexture(name);\n        break;\n\n      default:\n        console.warn(`Unsupported uniform type for ${name}`);\n    }\n  }\n\n  // TEXTURE METHODS ----------------------------------------------------\n\n  private getTextureUnit() {\n    return this.staticTextures.size + this.dynamicTextures.size;\n  }\n\n  private getUniformLocation(name: string) {\n    const location = this.gl.getUniformLocation(this.program, name);\n    if (!location) {\n      throw new Error(`Failed to retrieve unform loaction for ${name}`);\n    }\n    return location;\n  }\n\n  private initializeTexture(name: string) {\n    // Create a new texture\n    const location = this.getUniformLocation(name);\n    const texture = this.gl.createTexture();\n    const textureUnit = this.getTextureUnit();\n\n    // Set the sampler uniform to use the correct texture unit\n    this.gl.uniform1i(location, textureUnit);\n\n    // Use a placeholder pixel while the image loads\n    this.gl.activeTexture(this.gl.TEXTURE0 + textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    updateTexture(this.gl);\n\n    return [texture, textureUnit] as const;\n  }\n\n  private loadStaticTexture(name: string, url: string) {\n    const [texture, textureUnit] = this.initializeTexture(name);\n\n    // Track the texture\n    this.staticTextures.set(name, { asset: texture, unit: textureUnit });\n\n    // Load the image\n    const image = new Image();\n    image.crossOrigin = \"anonymous\";\n\n    image.onload = () => {\n      try {\n        const texture = this.staticTextures.get(name);\n        const sizeName = `${name}_size`;\n        const sizeLocation = this.gl.getUniformLocation(this.program, sizeName);\n\n        if (sizeLocation && texture) {\n          this.uniforms.set(sizeName, { type: \"vec2\", location: sizeLocation });\n          this.gl.uniform2f(sizeLocation, image.width, image.height);\n          this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n          this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n          setTextureParams(this.gl, image);\n          updateTexture(this.gl, image);\n        }\n      } catch (error) {\n        console.error(`Error loading texture ${name}:`, error);\n      }\n    };\n\n    image.onerror = () => {\n      console.error(`Failed to load texture: ${url}`);\n    };\n\n    image.src = url;\n  }\n\n  private async loadDynamicTexture(name: string, url?: string) {\n    const video = document.createElement(\"video\");\n    video.muted = true;\n    video.autoplay = true;\n    video.playsInline = true;\n\n    video.onloadeddata = () => {\n      const [asset, unit] = this.initializeTexture(name);\n\n      // Track the texture\n      this.dynamicTextures.set(name, { video, asset, unit });\n\n      video.play();\n\n      try {\n        const texture = this.dynamicTextures.get(name);\n        const sizeName = `${name}_size`;\n        const sizeLocation = this.gl.getUniformLocation(this.program, sizeName);\n\n        if (sizeLocation && texture) {\n          this.uniforms.set(sizeName, { type: \"vec2\", location: sizeLocation });\n          this.gl.uniform2f(sizeLocation, video.videoWidth, video.videoHeight);\n          this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n          this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n          setTextureParams(this.gl, texture.video);\n          updateTexture(this.gl, texture.video);\n        }\n      } catch (error) {\n        console.error(`Error loading texture ${name}:`, error);\n      }\n    };\n\n    video.onerror = () => {\n      console.error(`Failed to load texture: ${url}`);\n    };\n\n    if (!url) {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      video.srcObject = stream;\n    } else {\n      video.loop = true;\n      video.crossOrigin = \"anonymous\";\n      video.src = url;\n    }\n  }\n\n  public renderDynamicTextures() {\n    for (const texture of Array.from(this.dynamicTextures.values())) {\n      this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n      this.gl.texImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        this.gl.RGBA,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        texture.video\n      );\n    }\n  }\n\n  // LIFECYCLE METHODS ----------------------------------------------------\n\n  public destroy() {\n    this.staticTextures.forEach((txtr) => this.gl.deleteTexture(txtr.asset));\n    this.staticTextures.clear();\n    for (const texture of Array.from(this.dynamicTextures.values())) {\n      const src = texture.video.srcObject;\n      if (src instanceof MediaStream) {\n        src.getTracks().forEach((track) => track.stop());\n      } else {\n        texture.video.srcObject = null;\n      }\n    }\n    this.dynamicTextures.clear();\n  }\n}\n\nexport default GlslAssetManager;\n","const vertexShaderSourceV1 = `\n    attribute vec2 a_position;\n    void main() {\n      gl_Position = vec4(a_position, 0.0, 1.0);\n    }\n  `;\n\nconst vertexShaderSourceV3 = `#version 300 es\n    in vec2 a_position;\n    \n    void main() {\n      gl_Position = vec4(a_position, 0.0, 1.0);\n    }`;\n\nconst fragmentShaderSourceV1 = `\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform vec2 u_mouse;\n\n    void main() {\n      vec2 st = gl_FragCoord.xy / u_resolution;\n      vec2 mouse = u_mouse / u_resolution;\n\n      // Distance from the mouse\n      float dist = distance(st, mouse);\n      \n      // Color based on time and distance\n      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `;\n\nconst fragmentShaderSourceV3 = `#version 300 es\n    precision mediump float;\n\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform vec2 u_mouse;\n\n    void main() {\n      vec2 st = gl_FragCoord.xy / u_resolution;\n      vec2 mouse = u_mouse / u_resolution;\n\n      // Distance from the mouse\n      float dist = distance(st, mouse);\n      \n      // Color based on time and distance\n      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `;\n\nexport {\n  vertexShaderSourceV1,\n  fragmentShaderSourceV1,\n  vertexShaderSourceV3,\n  fragmentShaderSourceV3,\n};\n","import { getContext } from \"./utils\";\nimport {\n  fragmentShaderSourceV1,\n  vertexShaderSourceV1,\n  fragmentShaderSourceV3,\n  vertexShaderSourceV3,\n} from \"./shaders\";\n\nconst DEFAULT_VERTICES = new Float32Array([\n  -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1,\n]);\n\nclass GlslCanvas {\n  readonly container: HTMLElement;\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGL2RenderingContext;\n  readonly program: WebGLProgram;\n\n  constructor(container: HTMLElement, version: 1 | 3, frag?: string) {\n    this.container = container;\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.style.display = \"block\";\n    this.canvas.style.width = this.canvas.style.height = \"100%\";\n    this.container.appendChild(this.canvas);\n\n    this.gl = getContext(this.canvas);\n    const fShader =\n      version === 3 ? fragmentShaderSourceV3 : fragmentShaderSourceV1;\n    const vShader = version === 3 ? vertexShaderSourceV3 : vertexShaderSourceV1;\n\n    const vertexShader = this.compileShader(this.gl.VERTEX_SHADER, vShader);\n\n    const fragmentShader = this.compileShader(\n      this.gl.FRAGMENT_SHADER,\n      frag ?? fShader\n    );\n\n    this.program = this.createProgram(vertexShader, fragmentShader);\n    this.gl.useProgram(this.program);\n    this.createBuffer(DEFAULT_VERTICES);\n\n    const a_Position = this.gl.getAttribLocation(this.program, \"a_position\");\n    this.gl.enableVertexAttribArray(a_Position);\n    this.gl.vertexAttribPointer(a_Position, 2, this.gl.FLOAT, false, 0, 0);\n  }\n\n  private compileShader(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (!shader) throw new Error(\"Shader creation failed\");\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      const message = `Shader compilation error: ${this.gl.getShaderInfoLog(\n        shader\n      )}`;\n      this.gl.deleteShader(shader);\n      throw new Error(message);\n    }\n\n    return shader;\n  }\n\n  private createProgram(\n    vertexShader: WebGLShader,\n    fragmentShader: WebGLShader\n  ) {\n    const program = this.gl.createProgram();\n    if (!program) {\n      throw new Error(`Error creating WebGL Program`);\n    }\n    this.gl.attachShader(program, vertexShader);\n    this.gl.attachShader(program, fragmentShader);\n    this.gl.linkProgram(program);\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n      throw new Error(\n        `Program linking error: ${this.gl.getProgramInfoLog(program)}`\n      );\n    }\n    return program;\n  }\n\n  private createBuffer(data: Float32Array) {\n    const buffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, data, this.gl.STATIC_DRAW);\n    return buffer;\n  }\n\n  public resizeCanvas() {\n    const rect = this.container.getBoundingClientRect();\n    this.canvas.width = rect.width;\n    this.canvas.height = rect.height;\n  }\n\n  public destroy() {\n    this.container.innerHTML = \"\";\n  }\n}\n\nexport default GlslCanvas;\nexport { DEFAULT_VERTICES };\n","import GlslAssetManager from \"./glsl-asset-manager\";\nimport GlslCanvas, { DEFAULT_VERTICES } from \"./glsl-canvas\";\nimport type { UniformValue, UniformMap } from \"./types\";\n\ninterface GlslRendererConstructorProps {\n  container: HTMLElement;\n  frag?: string;\n  uniforms?: UniformMap;\n  uniformPrefix?: string;\n  glVersion?: 1 | 3;\n}\n\nexport default class GlslRenderer extends GlslCanvas {\n  private mousePos = [0, 0];\n  private controller = new AbortController();\n  private rafId: number | null = null;\n  readonly assets: GlslAssetManager;\n\n  constructor({\n    container,\n    frag,\n    uniforms = {},\n    uniformPrefix = \"u_\",\n    glVersion = 3,\n  }: GlslRendererConstructorProps) {\n    super(container, glVersion, frag);\n    this.assets = new GlslAssetManager(\n      this.gl,\n      this.program,\n      uniforms,\n      uniformPrefix\n    );\n\n    this.handleResize();\n    this.addEventListeners();\n  }\n\n  private render(time: number) {\n    this.gl.clearColor(0, 0, 0, 1);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    // Pass uniforms\n    const uTime = this.assets.uniforms.get(`${this.assets.uniformPrefix}time`);\n    if (uTime) {\n      this.gl.uniform1f(uTime.location, time * 0.001); // Time in seconds\n    }\n    const uMouse = this.assets.uniforms.get(\n      `${this.assets.uniformPrefix}mouse`\n    );\n    if (uMouse) {\n      this.gl.uniform2f(uMouse.location, this.mousePos[0], this.mousePos[1]);\n    }\n\n    // render dynamic textures\n    this.assets.renderDynamicTextures();\n\n    // Draw\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, DEFAULT_VERTICES.length / 2);\n\n    requestAnimationFrame((t) => this.render(t));\n  }\n\n  private handleResize() {\n    super.resizeCanvas();\n\n    const uRes =\n      this.assets.uniforms.get(`${this.assets.uniformPrefix}resolution`) ??\n      null;\n\n    if (!uRes) {\n      console.warn(\n        `Could not find resolution uniform (${this.assets.uniformPrefix}resolution) location when resizing canvas`\n      );\n      return;\n    }\n\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.gl.uniform2f(uRes.location, this.canvas.width, this.canvas.height);\n  }\n\n  private addEventListeners() {\n    const { signal } = this.controller;\n\n    this.canvas.addEventListener(\n      \"mousemove\",\n      (event) => {\n        const rect = this.canvas.getBoundingClientRect();\n        this.mousePos[0] = event.clientX - rect.left;\n        this.mousePos[1] = rect.height - (event.clientY - rect.top); // Flip Y-axis\n      },\n      { signal }\n    );\n\n    this.canvas.addEventListener(\n      \"touchmove\",\n      (event) => {\n        const { clientX, clientY } = event.touches[0];\n        const rect = this.canvas.getBoundingClientRect();\n        this.mousePos[0] = clientX - rect.left;\n        this.mousePos[1] = rect.height - (clientY - rect.top); // Flip Y-axis\n      },\n      { signal }\n    );\n\n    window.addEventListener(\"resize\", () => this.handleResize(), { signal });\n  }\n\n  public play() {\n    this.rafId = requestAnimationFrame((t) => this.render(t));\n  }\n\n  public pause() {\n    if (typeof this.rafId === \"number\") {\n      cancelAnimationFrame(this.rafId);\n      this.rafId = null;\n    }\n  }\n\n  public updateUniform(name: string, value: UniformValue) {\n    this.assets.setUniformValue(name, value);\n  }\n\n  public destroy() {\n    super.destroy();\n    this.assets.destroy();\n    this.controller.abort();\n  }\n}\n"],"mappings":"AAEA,SAASA,EAASC,EAAgB,CAChC,OAAO,OAAOA,GAAU,QAC1B,CAEA,SAASC,EAASD,EAAgB,CAChC,OAAO,OAAOA,GAAU,QAC1B,CAEA,SAASE,EAAOF,EAAgB,CAC9B,OAAO,OAAOA,GAAU,SAC1B,CAEA,SAASG,EAAOH,EAA+B,CAC7C,OAAO,MAAM,QAAQA,CAAK,GAAKA,EAAM,SAAW,GAAKA,EAAM,MAAMD,CAAQ,CAC3E,CAEA,SAASK,EAAOJ,EAA+B,CAC7C,OAAO,MAAM,QAAQA,CAAK,GAAKA,EAAM,SAAW,GAAKA,EAAM,MAAMD,CAAQ,CAC3E,CAEA,SAASM,EAAOL,EAA+B,CAC7C,OAAO,MAAM,QAAQA,CAAK,GAAKA,EAAM,SAAW,GAAKA,EAAM,MAAMD,CAAQ,CAC3E,CAEA,SAASO,EAAYC,EAA2B,CAC9C,IAAMC,EAAkB,CACtB,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,MACF,EACMC,EAAoBF,EAAS,YAAY,EAE/C,OAAOC,EAAgB,KAAME,GAAQD,EAAkB,SAASC,CAAG,CAAC,CACtE,CAEA,SAASC,EAAYJ,EAA2B,CAC9C,IAAMK,EAAkB,CACtB,OACA,OACA,OACA,OACA,OACA,OACA,QACA,KACF,EACMH,EAAoBF,EAAS,YAAY,EAE/C,OAAOK,EAAgB,KAAMF,GAAQD,EAAkB,SAASC,CAAG,CAAC,CACtE,CCtDA,SAASG,EAAWC,EAA2B,CAC7C,IAAMC,EAAKD,EAAO,WAAW,QAAQ,EAErC,GAAI,CAACC,EAAI,MAAM,IAAI,MAAM,qBAAqB,EAE9C,OAAOA,CACT,CAEA,SAASC,EACPD,EACAE,EACA,CACA,GAAM,CAAE,WAAAC,EAAY,KAAAC,EAAM,cAAAC,CAAc,EAAIL,EACtCM,EAAQ,IAAI,WAAW,CAAC,EAAG,EAAG,EAAG,GAAG,CAAC,EAEtCJ,EAGHF,EAAG,WAAWA,EAAG,WAAY,EAAGI,EAAMA,EAAMC,EAAeH,CAAO,EAFlEF,EAAG,WAAWG,EAAY,EAAGC,EAAM,EAAG,EAAG,EAAGA,EAAMC,EAAeC,CAAK,CAI1E,CAEA,SAASC,EACPP,EACAE,EACA,CACIM,EAAWN,EAAQ,KAAK,GAAKM,EAAWN,EAAQ,MAAM,EAExDF,EAAG,eAAeA,EAAG,UAAU,GAG/BA,EAAG,cAAcA,EAAG,WAAYA,EAAG,eAAgBA,EAAG,aAAa,EACnEA,EAAG,cAAcA,EAAG,WAAYA,EAAG,eAAgBA,EAAG,aAAa,EACnEA,EAAG,cAAcA,EAAG,WAAYA,EAAG,mBAAoBA,EAAG,MAAM,EAEpE,CAGA,SAASQ,EAAWC,EAAwB,CAC1C,OAAOA,EAAQ,IAAMA,EAASA,EAAQ,KAAQ,CAChD,CAcA,SAASC,EAAeC,EAAmC,CACzD,OAAI,OAAOA,GAAY,SACjBC,EAAYD,CAAO,EACd,CAAE,MAAO,GAAM,KAAM,OAAQ,EAC3BE,EAAYF,CAAO,EACrB,CAAE,MAAO,GAAM,KAAM,OAAQ,EAC3BA,IAAY,SACd,CAAE,MAAO,GAAM,KAAM,QAAS,EAC5B,CAAC,MAAM,OAAOA,CAAO,CAAC,GAAKA,EAAQ,SAAS,GAAG,EACjD,CAAE,MAAO,GAAM,KAAM,OAAQ,EAC3B,CAAC,MAAM,OAAOA,CAAO,CAAC,GAAK,CAACA,EAAQ,SAAS,GAAG,EAClD,CAAE,MAAO,GAAM,KAAM,KAAM,EAE3B,CAAE,MAAO,GAAO,QAAS,yBAAyBA,CAAO,EAAG,EAE5D,MAAM,QAAQA,CAAO,EAC1BA,EAAQ,QAAU,GAAKA,EAAQ,QAAU,EAEpC,CAAE,MAAO,GAAM,KADT,MAAMA,EAAQ,MAAM,EACN,EAEpB,CACL,MAAO,GACP,QAAS,0BAA0BA,EAAQ,MAAM,EACnD,EAEO,OAAOA,GAAY,SACrB,CAAE,MAAO,GAAM,KAAM,OAAQ,EAC3B,OAAOA,GAAY,UACrB,CAAE,MAAO,GAAM,KAAM,MAAO,EAE5B,CAAE,MAAO,GAAO,QAAS,yBAAyBA,CAAO,EAAG,CAEvE,CChEA,IAAMG,EAAN,KAAuB,CAQrB,YACEC,EACAC,EACAC,EACAC,EACA,CAVF,KAAS,SAAsC,IAAI,IACnD,KAAS,eAA6C,IAAI,IAC1D,KAAS,gBAA+C,IAAI,IAC5D,KAAS,cAAwB,KAQ/B,KAAK,GAAKH,EACV,KAAK,QAAUC,EACf,KAAK,cAAgBE,EAErB,KAAK,0BAA0B,EAC/B,KAAK,yBAAyBD,CAAe,CAC/C,CAIQ,2BAA4B,CAClC,IAAME,EAAQ,KAAK,GAAG,mBACpB,KAAK,QACL,GAAG,KAAK,aAAa,MACvB,EACIA,GACF,KAAK,SAAS,IAAI,GAAG,KAAK,aAAa,OAAQ,CAC7C,KAAM,QACN,SAAUA,CACZ,CAAC,EAGH,IAAMC,EAAO,KAAK,GAAG,mBACnB,KAAK,QACL,GAAG,KAAK,aAAa,YACvB,EACIA,GACF,KAAK,SAAS,IAAI,GAAG,KAAK,aAAa,aAAc,CACnD,KAAM,OACN,SAAUA,CACZ,CAAC,EAGH,IAAMC,EAAS,KAAK,GAAG,mBACrB,KAAK,QACL,GAAG,KAAK,aAAa,OACvB,EACIA,GACF,KAAK,SAAS,IAAI,GAAG,KAAK,aAAa,QAAS,CAC9C,KAAM,OACN,SAAUA,CACZ,CAAC,CAEL,CAEQ,yBAAyBC,EAAsB,CACrD,OAAW,CAACC,EAAMC,CAAG,IAAK,OAAO,QAAQF,CAAQ,EAAG,CAClD,IAAMG,EAAW,KAAK,GAAG,mBACvB,KAAK,QACL,GAAG,KAAK,aAAa,GAAGF,CAAI,EAC9B,EACA,GAAI,CAACE,EAAU,CACb,QAAQ,KAAK,0BAA0BF,CAAI,oBAAoB,EAC/D,QACF,CAEA,IAAMG,EAAWC,EAAeH,CAAG,EAEnC,GAAI,CAACE,EAAS,MAAO,CACnB,QAAQ,MAAMA,EAAS,OAAO,EAC9B,QACF,CAEA,KAAK,SAAS,IAAIH,EAAM,CAAE,KAAMG,EAAS,KAAM,SAAAD,CAAS,CAAC,EAEzD,KAAK,gBAAgBF,EAAMC,CAAG,CAChC,CACF,CAEO,gBAAgBI,EAAeC,EAAqB,CACzD,IAAMC,EAAM,KAAK,SAAS,IAAIF,CAAK,EACnC,GAAI,CAACE,EAAK,CACR,QAAQ,KAAK,WAAWF,CAAK,YAAY,EACzC,MACF,CAEA,IAAML,EAAO,GAAG,KAAK,aAAa,GAAGK,CAAK,GAEpC,CAAE,KAAAG,EAAM,SAAAN,CAAS,EAAIK,EAE3B,OAAQC,EAAM,CACZ,IAAK,QACCC,EAASH,CAAK,EAAG,KAAK,GAAG,UAAUJ,EAAUI,CAAK,EACjD,QAAQ,KAAK,mBAAmBN,CAAI,0BAA0B,EACnE,MAEF,IAAK,OACCU,EAAOJ,CAAK,EAAG,KAAK,GAAG,WAAWJ,EAAUI,CAAK,EAChD,QAAQ,KAAK,mBAAmBN,CAAI,wBAAwB,EACjE,MAEF,IAAK,OACCW,EAAOL,CAAK,EAAG,KAAK,GAAG,WAAWJ,EAAUI,CAAK,EAChD,QAAQ,KAAK,mBAAmBN,CAAI,wBAAwB,EACjE,MAEF,IAAK,OACCY,EAAON,CAAK,EAAG,KAAK,GAAG,WAAWJ,EAAUI,CAAK,EAChD,QAAQ,KAAK,mBAAmBN,CAAI,wBAAwB,EACjE,MAEF,IAAK,MACCS,EAASH,CAAK,EAAG,KAAK,GAAG,UAAUJ,EAAUI,CAAK,EACjD,QAAQ,KAAK,mBAAmBN,CAAI,0BAA0B,EACnE,MAEF,IAAK,OACCa,EAAOP,CAAK,EAAG,KAAK,GAAG,UAAUJ,EAAUI,EAAQ,EAAI,CAAC,EACvD,QAAQ,KAAK,mBAAmBN,CAAI,2BAA2B,EACpE,MAEF,IAAK,QACCc,EAASR,CAAK,EAAG,KAAK,kBAAkBN,EAAMM,CAAK,EAClD,QAAQ,KAAK,mBAAmBN,CAAI,0BAA0B,EACnE,MAEF,IAAK,QACCc,EAASR,CAAK,EAAG,KAAK,mBAAmBN,EAAMM,CAAK,EACnD,QAAQ,KAAK,mBAAmBN,CAAI,0BAA0B,EACnE,MAEF,IAAK,SACH,KAAK,mBAAmBA,CAAI,EAC5B,MAEF,QACE,QAAQ,KAAK,gCAAgCA,CAAI,EAAE,CACvD,CACF,CAIQ,gBAAiB,CACvB,OAAO,KAAK,eAAe,KAAO,KAAK,gBAAgB,IACzD,CAEQ,mBAAmBA,EAAc,CACvC,IAAME,EAAW,KAAK,GAAG,mBAAmB,KAAK,QAASF,CAAI,EAC9D,GAAI,CAACE,EACH,MAAM,IAAI,MAAM,0CAA0CF,CAAI,EAAE,EAElE,OAAOE,CACT,CAEQ,kBAAkBF,EAAc,CAEtC,IAAME,EAAW,KAAK,mBAAmBF,CAAI,EACvCe,EAAU,KAAK,GAAG,cAAc,EAChCC,EAAc,KAAK,eAAe,EAGxC,YAAK,GAAG,UAAUd,EAAUc,CAAW,EAGvC,KAAK,GAAG,cAAc,KAAK,GAAG,SAAWA,CAAW,EACpD,KAAK,GAAG,YAAY,KAAK,GAAG,WAAYD,CAAO,EAC/CE,EAAc,KAAK,EAAE,EAEd,CAACF,EAASC,CAAW,CAC9B,CAEQ,kBAAkBhB,EAAckB,EAAa,CACnD,GAAM,CAACH,EAASC,CAAW,EAAI,KAAK,kBAAkBhB,CAAI,EAG1D,KAAK,eAAe,IAAIA,EAAM,CAAE,MAAOe,EAAS,KAAMC,CAAY,CAAC,EAGnE,IAAMG,EAAQ,IAAI,MAClBA,EAAM,YAAc,YAEpBA,EAAM,OAAS,IAAM,CACnB,GAAI,CACF,IAAMJ,EAAU,KAAK,eAAe,IAAIf,CAAI,EACtCoB,EAAW,GAAGpB,CAAI,QAClBqB,EAAe,KAAK,GAAG,mBAAmB,KAAK,QAASD,CAAQ,EAElEC,GAAgBN,IAClB,KAAK,SAAS,IAAIK,EAAU,CAAE,KAAM,OAAQ,SAAUC,CAAa,CAAC,EACpE,KAAK,GAAG,UAAUA,EAAcF,EAAM,MAAOA,EAAM,MAAM,EACzD,KAAK,GAAG,cAAc,KAAK,GAAG,SAAWJ,EAAQ,IAAI,EACrD,KAAK,GAAG,YAAY,KAAK,GAAG,WAAYA,EAAQ,KAAK,EACrDO,EAAiB,KAAK,GAAIH,CAAK,EAC/BF,EAAc,KAAK,GAAIE,CAAK,EAEhC,OAASI,EAAO,CACd,QAAQ,MAAM,yBAAyBvB,CAAI,IAAKuB,CAAK,CACvD,CACF,EAEAJ,EAAM,QAAU,IAAM,CACpB,QAAQ,MAAM,2BAA2BD,CAAG,EAAE,CAChD,EAEAC,EAAM,IAAMD,CACd,CAEA,MAAc,mBAAmBlB,EAAckB,EAAc,CAC3D,IAAMM,EAAQ,SAAS,cAAc,OAAO,EAmC5C,GAlCAA,EAAM,MAAQ,GACdA,EAAM,SAAW,GACjBA,EAAM,YAAc,GAEpBA,EAAM,aAAe,IAAM,CACzB,GAAM,CAACC,EAAOC,CAAI,EAAI,KAAK,kBAAkB1B,CAAI,EAGjD,KAAK,gBAAgB,IAAIA,EAAM,CAAE,MAAAwB,EAAO,MAAAC,EAAO,KAAAC,CAAK,CAAC,EAErDF,EAAM,KAAK,EAEX,GAAI,CACF,IAAMT,EAAU,KAAK,gBAAgB,IAAIf,CAAI,EACvCoB,EAAW,GAAGpB,CAAI,QAClBqB,EAAe,KAAK,GAAG,mBAAmB,KAAK,QAASD,CAAQ,EAElEC,GAAgBN,IAClB,KAAK,SAAS,IAAIK,EAAU,CAAE,KAAM,OAAQ,SAAUC,CAAa,CAAC,EACpE,KAAK,GAAG,UAAUA,EAAcG,EAAM,WAAYA,EAAM,WAAW,EACnE,KAAK,GAAG,cAAc,KAAK,GAAG,SAAWT,EAAQ,IAAI,EACrD,KAAK,GAAG,YAAY,KAAK,GAAG,WAAYA,EAAQ,KAAK,EACrDO,EAAiB,KAAK,GAAIP,EAAQ,KAAK,EACvCE,EAAc,KAAK,GAAIF,EAAQ,KAAK,EAExC,OAASQ,EAAO,CACd,QAAQ,MAAM,yBAAyBvB,CAAI,IAAKuB,CAAK,CACvD,CACF,EAEAC,EAAM,QAAU,IAAM,CACpB,QAAQ,MAAM,2BAA2BN,CAAG,EAAE,CAChD,EAEKA,EAIHM,EAAM,KAAO,GACbA,EAAM,YAAc,YACpBA,EAAM,IAAMN,MANJ,CACR,IAAMS,EAAS,MAAM,UAAU,aAAa,aAAa,CAAE,MAAO,EAAK,CAAC,EACxEH,EAAM,UAAYG,CACpB,CAKF,CAEO,uBAAwB,CAC7B,QAAWZ,KAAW,MAAM,KAAK,KAAK,gBAAgB,OAAO,CAAC,EAC5D,KAAK,GAAG,cAAc,KAAK,GAAG,SAAWA,EAAQ,IAAI,EACrD,KAAK,GAAG,YAAY,KAAK,GAAG,WAAYA,EAAQ,KAAK,EACrD,KAAK,GAAG,WACN,KAAK,GAAG,WACR,EACA,KAAK,GAAG,KACR,KAAK,GAAG,KACR,KAAK,GAAG,cACRA,EAAQ,KACV,CAEJ,CAIO,SAAU,CACf,KAAK,eAAe,QAASa,GAAS,KAAK,GAAG,cAAcA,EAAK,KAAK,CAAC,EACvE,KAAK,eAAe,MAAM,EAC1B,QAAWb,KAAW,MAAM,KAAK,KAAK,gBAAgB,OAAO,CAAC,EAAG,CAC/D,IAAMc,EAAMd,EAAQ,MAAM,UACtBc,aAAe,YACjBA,EAAI,UAAU,EAAE,QAASC,GAAUA,EAAM,KAAK,CAAC,EAE/Cf,EAAQ,MAAM,UAAY,IAE9B,CACA,KAAK,gBAAgB,MAAM,CAC7B,CACF,EAEOgB,EAAQxC,EC1Tf,IAAMyC,EAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,IAOvBC,EAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,OAOvBC,EAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAsBzBC,EAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;IC5B/B,IAAMC,EAAmB,IAAI,aAAa,CACxC,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,CACzC,CAAC,EAEKC,EAAN,KAAiB,CAMf,YAAYC,EAAwBC,EAAgBC,EAAe,CACjE,KAAK,UAAYF,EACjB,KAAK,OAAS,SAAS,cAAc,QAAQ,EAC7C,KAAK,OAAO,MAAM,QAAU,QAC5B,KAAK,OAAO,MAAM,MAAQ,KAAK,OAAO,MAAM,OAAS,OACrD,KAAK,UAAU,YAAY,KAAK,MAAM,EAEtC,KAAK,GAAKG,EAAW,KAAK,MAAM,EAChC,IAAMC,EACJH,IAAY,EAAII,EAAyBC,EACrCC,EAAUN,IAAY,EAAIO,EAAuBC,EAEjDC,EAAe,KAAK,cAAc,KAAK,GAAG,cAAeH,CAAO,EAEhEI,EAAiB,KAAK,cAC1B,KAAK,GAAG,gBACRT,GAAQE,CACV,EAEA,KAAK,QAAU,KAAK,cAAcM,EAAcC,CAAc,EAC9D,KAAK,GAAG,WAAW,KAAK,OAAO,EAC/B,KAAK,aAAab,CAAgB,EAElC,IAAMc,EAAa,KAAK,GAAG,kBAAkB,KAAK,QAAS,YAAY,EACvE,KAAK,GAAG,wBAAwBA,CAAU,EAC1C,KAAK,GAAG,oBAAoBA,EAAY,EAAG,KAAK,GAAG,MAAO,GAAO,EAAG,CAAC,CACvE,CAEQ,cAAcC,EAAcC,EAAgB,CAClD,IAAMC,EAAS,KAAK,GAAG,aAAaF,CAAI,EACxC,GAAI,CAACE,EAAQ,MAAM,IAAI,MAAM,wBAAwB,EAKrD,GAHA,KAAK,GAAG,aAAaA,EAAQD,CAAM,EACnC,KAAK,GAAG,cAAcC,CAAM,EAExB,CAAC,KAAK,GAAG,mBAAmBA,EAAQ,KAAK,GAAG,cAAc,EAAG,CAC/D,IAAMC,EAAU,6BAA6B,KAAK,GAAG,iBACnDD,CACF,CAAC,GACD,WAAK,GAAG,aAAaA,CAAM,EACrB,IAAI,MAAMC,CAAO,CACzB,CAEA,OAAOD,CACT,CAEQ,cACNL,EACAC,EACA,CACA,IAAMM,EAAU,KAAK,GAAG,cAAc,EACtC,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,8BAA8B,EAKhD,GAHA,KAAK,GAAG,aAAaA,EAASP,CAAY,EAC1C,KAAK,GAAG,aAAaO,EAASN,CAAc,EAC5C,KAAK,GAAG,YAAYM,CAAO,EACvB,CAAC,KAAK,GAAG,oBAAoBA,EAAS,KAAK,GAAG,WAAW,EAC3D,MAAM,IAAI,MACR,0BAA0B,KAAK,GAAG,kBAAkBA,CAAO,CAAC,EAC9D,EAEF,OAAOA,CACT,CAEQ,aAAaC,EAAoB,CACvC,IAAMC,EAAS,KAAK,GAAG,aAAa,EACpC,YAAK,GAAG,WAAW,KAAK,GAAG,aAAcA,CAAM,EAC/C,KAAK,GAAG,WAAW,KAAK,GAAG,aAAcD,EAAM,KAAK,GAAG,WAAW,EAC3DC,CACT,CAEO,cAAe,CACpB,IAAMC,EAAO,KAAK,UAAU,sBAAsB,EAClD,KAAK,OAAO,MAAQA,EAAK,MACzB,KAAK,OAAO,OAASA,EAAK,MAC5B,CAEO,SAAU,CACf,KAAK,UAAU,UAAY,EAC7B,CACF,EAEOC,EAAQtB,ECzFf,IAAqBuB,EAArB,cAA0CC,CAAW,CAMnD,YAAY,CACV,UAAAC,EACA,KAAAC,EACA,SAAAC,EAAW,CAAC,EACZ,cAAAC,EAAgB,KAChB,UAAAC,EAAY,CACd,EAAiC,CAC/B,MAAMJ,EAAWI,EAAWH,CAAI,EAZlC,KAAQ,SAAW,CAAC,EAAG,CAAC,EACxB,KAAQ,WAAa,IAAI,gBACzB,KAAQ,MAAuB,KAW7B,KAAK,OAAS,IAAII,EAChB,KAAK,GACL,KAAK,QACLH,EACAC,CACF,EAEA,KAAK,aAAa,EAClB,KAAK,kBAAkB,CACzB,CAEQ,OAAOG,EAAc,CAC3B,KAAK,GAAG,WAAW,EAAG,EAAG,EAAG,CAAC,EAC7B,KAAK,GAAG,MAAM,KAAK,GAAG,gBAAgB,EAGtC,IAAMC,EAAQ,KAAK,OAAO,SAAS,IAAI,GAAG,KAAK,OAAO,aAAa,MAAM,EACrEA,GACF,KAAK,GAAG,UAAUA,EAAM,SAAUD,EAAO,IAAK,EAEhD,IAAME,EAAS,KAAK,OAAO,SAAS,IAClC,GAAG,KAAK,OAAO,aAAa,OAC9B,EACIA,GACF,KAAK,GAAG,UAAUA,EAAO,SAAU,KAAK,SAAS,CAAC,EAAG,KAAK,SAAS,CAAC,CAAC,EAIvE,KAAK,OAAO,sBAAsB,EAGlC,KAAK,GAAG,WAAW,KAAK,GAAG,UAAW,EAAGC,EAAiB,OAAS,CAAC,EAEpE,sBAAuBC,GAAM,KAAK,OAAOA,CAAC,CAAC,CAC7C,CAEQ,cAAe,CACrB,MAAM,aAAa,EAEnB,IAAMC,EACJ,KAAK,OAAO,SAAS,IAAI,GAAG,KAAK,OAAO,aAAa,YAAY,GACjE,KAEF,GAAI,CAACA,EAAM,CACT,QAAQ,KACN,sCAAsC,KAAK,OAAO,aAAa,2CACjE,EACA,MACF,CAEA,KAAK,GAAG,SAAS,EAAG,EAAG,KAAK,OAAO,MAAO,KAAK,OAAO,MAAM,EAC5D,KAAK,GAAG,UAAUA,EAAK,SAAU,KAAK,OAAO,MAAO,KAAK,OAAO,MAAM,CACxE,CAEQ,mBAAoB,CAC1B,GAAM,CAAE,OAAAC,CAAO,EAAI,KAAK,WAExB,KAAK,OAAO,iBACV,YACCC,GAAU,CACT,IAAMC,EAAO,KAAK,OAAO,sBAAsB,EAC/C,KAAK,SAAS,CAAC,EAAID,EAAM,QAAUC,EAAK,KACxC,KAAK,SAAS,CAAC,EAAIA,EAAK,QAAUD,EAAM,QAAUC,EAAK,IACzD,EACA,CAAE,OAAAF,CAAO,CACX,EAEA,KAAK,OAAO,iBACV,YACCC,GAAU,CACT,GAAM,CAAE,QAAAE,EAAS,QAAAC,CAAQ,EAAIH,EAAM,QAAQ,CAAC,EACtCC,EAAO,KAAK,OAAO,sBAAsB,EAC/C,KAAK,SAAS,CAAC,EAAIC,EAAUD,EAAK,KAClC,KAAK,SAAS,CAAC,EAAIA,EAAK,QAAUE,EAAUF,EAAK,IACnD,EACA,CAAE,OAAAF,CAAO,CACX,EAEA,OAAO,iBAAiB,SAAU,IAAM,KAAK,aAAa,EAAG,CAAE,OAAAA,CAAO,CAAC,CACzE,CAEO,MAAO,CACZ,KAAK,MAAQ,sBAAuBF,GAAM,KAAK,OAAOA,CAAC,CAAC,CAC1D,CAEO,OAAQ,CACT,OAAO,KAAK,OAAU,WACxB,qBAAqB,KAAK,KAAK,EAC/B,KAAK,MAAQ,KAEjB,CAEO,cAAcO,EAAcC,EAAqB,CACtD,KAAK,OAAO,gBAAgBD,EAAMC,CAAK,CACzC,CAEO,SAAU,CACf,MAAM,QAAQ,EACd,KAAK,OAAO,QAAQ,EACpB,KAAK,WAAW,MAAM,CACxB,CACF","names":["isNumber","value","isString","isBool","isVec2","isVec3","isVec4","isImageFile","fileName","imageExtensions","lowerCaseFileName","ext","isVideoFile","videoExtensions","getContext","canvas","gl","updateTexture","texture","TEXTURE_2D","RGBA","UNSIGNED_BYTE","pixel","setTextureParams","isPowerOf2","value","getUniformType","uniform","isImageFile","isVideoFile","GlslAssetManager","gl","program","initialUniforms","uniformPrefix","uTime","uRes","uMouse","uniforms","name","val","location","inferred","getUniformType","_name","value","uni","type","isNumber","isVec2","isVec3","isVec4","isBool","isString","texture","textureUnit","updateTexture","url","image","sizeName","sizeLocation","setTextureParams","error","video","asset","unit","stream","txtr","src","track","glsl_asset_manager_default","vertexShaderSourceV1","vertexShaderSourceV3","fragmentShaderSourceV1","fragmentShaderSourceV3","DEFAULT_VERTICES","GlslCanvas","container","version","frag","getContext","fShader","fragmentShaderSourceV3","fragmentShaderSourceV1","vShader","vertexShaderSourceV3","vertexShaderSourceV1","vertexShader","fragmentShader","a_Position","type","source","shader","message","program","data","buffer","rect","glsl_canvas_default","GlslRenderer","glsl_canvas_default","container","frag","uniforms","uniformPrefix","glVersion","glsl_asset_manager_default","time","uTime","uMouse","DEFAULT_VERTICES","t","uRes","signal","event","rect","clientX","clientY","name","value"]}