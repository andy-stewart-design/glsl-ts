{"version":3,"sources":["../src/validators.ts","../src/utils.ts","../src/glsl-asset-manager.ts","../src/shaders.ts","../src/glsl-canvas.ts","../src/index.ts"],"names":["isNumber","value","isString","isBool","isVec2","isVec3","isVec4","isImageFile","fileName","imageExtensions","lowerCaseFileName","ext","isVideoFile","videoExtensions","getContext","canvas","gl","updateTexture","texture","TEXTURE_2D","RGBA","UNSIGNED_BYTE","pixel","setTextureParams","isPowerOf2","getUniformType","uniform","GlslAssetManager","program","initialUniforms","uTime","uRes","uMouse","uniforms","name","val","location","inferred","uni","type","textureUnit","url","image","sizeName","sizeLocation","error","video","asset","unit","stream","txtr","src","track","glsl_asset_manager_default","vertexShaderSource","fragmentShaderSource","DEFAULT_VERTICES","GlslCanvas","container","frag","vertexShader","fragmentShader","a_Position","source","shader","data","buffer","rect","glsl_canvas_default","GlslRenderer","time","t","signal","event"],"mappings":"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","file":"index.cjs","sourcesContent":["import type { Vec2, Vec3, Vec4 } from \"./types\";\n\nfunction isNumber(value: unknown) {\n  return typeof value === \"number\";\n}\n\nfunction isString(value: unknown) {\n  return typeof value === \"string\";\n}\n\nfunction isBool(value: unknown) {\n  return typeof value === \"boolean\";\n}\n\nfunction isVec2(value: unknown): value is Vec2 {\n  return Array.isArray(value) && value.length === 2 && value.every(isNumber);\n}\n\nfunction isVec3(value: unknown): value is Vec3 {\n  return Array.isArray(value) && value.length === 3 && value.every(isNumber);\n}\n\nfunction isVec4(value: unknown): value is Vec4 {\n  return Array.isArray(value) && value.length === 4 && value.every(isNumber);\n}\n\nfunction isImageFile(fileName: string): boolean {\n  const imageExtensions = [\n    \".jpg\",\n    \".jpeg\",\n    \".png\",\n    \".gif\",\n    \".bmp\",\n    \".webp\",\n    \".svg\",\n    \".tiff\",\n    \".ico\",\n  ];\n  const lowerCaseFileName = fileName.toLowerCase();\n\n  return imageExtensions.some((ext) => lowerCaseFileName.endsWith(ext));\n}\n\nfunction isVideoFile(fileName: string): boolean {\n  const videoExtensions = [\n    \".mp4\",\n    \".avi\",\n    \".mov\",\n    \".mkv\",\n    \".wmv\",\n    \".flv\",\n    \".webm\",\n    \".ts\",\n  ];\n  const lowerCaseFileName = fileName.toLowerCase();\n\n  return videoExtensions.some((ext) => lowerCaseFileName.endsWith(ext));\n}\n\nexport {\n  isNumber,\n  isString,\n  isBool,\n  isVec2,\n  isVec3,\n  isVec4,\n  isImageFile,\n  isVideoFile,\n};\n","import type { UniformType } from \"./types\";\nimport { isImageFile, isVideoFile } from \"./validators\";\n\nfunction getContext(canvas: HTMLCanvasElement) {\n  const gl = canvas.getContext(\"webgl\");\n\n  if (!gl) throw new Error(\"WebGL not supported\");\n\n  return gl;\n}\n\nfunction updateTexture(\n  gl: WebGLRenderingContext,\n  texture?: HTMLImageElement | HTMLVideoElement\n) {\n  const { TEXTURE_2D, RGBA, UNSIGNED_BYTE } = gl;\n  const pixel = new Uint8Array([0, 0, 0, 255]);\n\n  if (!texture) {\n    gl.texImage2D(TEXTURE_2D, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE, pixel);\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, RGBA, RGBA, UNSIGNED_BYTE, texture);\n  }\n}\n\nfunction setTextureParams(\n  gl: WebGLRenderingContext,\n  texture: HTMLImageElement | HTMLVideoElement\n) {\n  if (isPowerOf2(texture.width) && isPowerOf2(texture.height)) {\n    // Set parameters for power-of-2 textures\n    gl.generateMipmap(gl.TEXTURE_2D);\n  } else {\n    // Set parameters for non-power-of-2 textures\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  }\n}\n\n// Helper function to check if a number is a power of 2\nfunction isPowerOf2(value: number): boolean {\n  return value > 0 && (value & (value - 1)) === 0;\n}\n\ninterface ValidInferredUniform {\n  valid: true;\n  type: UniformType;\n}\n\ninterface InvalidInferredUniform {\n  valid: false;\n  message: string;\n}\n\ntype InferredUniform = ValidInferredUniform | InvalidInferredUniform;\n\nfunction getUniformType(uniform: unknown): InferredUniform {\n  if (typeof uniform === \"string\") {\n    if (isImageFile(uniform)) {\n      return { valid: true, type: \"image\" };\n    } else if (isVideoFile(uniform)) {\n      return { valid: true, type: \"video\" };\n    } else if (uniform === \"webcam\") {\n      return { valid: true, type: \"webcam\" };\n    } else if (!isNaN(Number(uniform)) && uniform.includes(\".\")) {\n      return { valid: true, type: \"float\" };\n    } else if (!isNaN(Number(uniform)) && !uniform.includes(\".\")) {\n      return { valid: true, type: \"int\" };\n    } else {\n      return { valid: false, message: `Unknown uniform type: ${uniform}` };\n    }\n  } else if (Array.isArray(uniform)) {\n    if (uniform.length >= 2 && uniform.length <= 4) {\n      const type = `vec${uniform.length}` as \"vec2\" | \"vec3\" | \"vec4\";\n      return { valid: true, type };\n    } else {\n      return {\n        valid: false,\n        message: `Invalid vector length: ${uniform.length}`,\n      };\n    }\n  } else if (typeof uniform === \"number\") {\n    return { valid: true, type: \"float\" };\n  } else if (typeof uniform === \"boolean\") {\n    return { valid: true, type: \"bool\" };\n  } else {\n    return { valid: false, message: `Unknown uniform type: ${uniform}` };\n  }\n}\n\nexport { getContext, updateTexture, setTextureParams, getUniformType };\n","import { getUniformType, setTextureParams, updateTexture } from \"./utils\";\nimport type {\n  UniformMap,\n  UniformConfigType,\n  UniformConfigValue,\n  UnstableUniformMap,\n  UniformMapValue,\n} from \"./types\";\nimport {\n  isBool,\n  isNumber,\n  isString,\n  isVec2,\n  isVec3,\n  isVec4,\n} from \"./validators\";\n\ninterface WebGLUniform {\n  type: UniformConfigType;\n  location: WebGLUniformLocation;\n}\n\ninterface StaticTexture {\n  asset: WebGLTexture;\n  unit: number;\n}\n\ninterface DynamicTexture extends StaticTexture {\n  video: HTMLVideoElement;\n}\n\nclass GlslAssetManager {\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n  readonly uniforms: Map<string, WebGLUniform> = new Map();\n  readonly staticTextures: Map<string, StaticTexture> = new Map();\n  readonly dynamicTextures: Map<string, DynamicTexture> = new Map();\n\n  constructor(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram,\n    initialUniforms: UnstableUniformMap = {}\n  ) {\n    this.gl = gl;\n    this.program = program;\n\n    this.initializeDefaultUniforms();\n    this.initializeCustomUniforms(initialUniforms);\n  }\n\n  // UNIFORM METHODS ----------------------------------------------------\n\n  private initializeDefaultUniforms() {\n    const uTime = this.gl.getUniformLocation(this.program, \"u_time\");\n    if (uTime) {\n      this.uniforms.set(\"u_time\", { type: \"float\", location: uTime });\n    }\n\n    const uRes = this.gl.getUniformLocation(this.program, \"u_resolution\");\n    if (uRes) {\n      this.uniforms.set(\"u_resolution\", { type: \"vec2\", location: uRes });\n    }\n\n    const uMouse = this.gl.getUniformLocation(this.program, \"u_mouse\");\n    if (uMouse) {\n      this.uniforms.set(\"u_mouse\", { type: \"vec2\", location: uMouse });\n    }\n  }\n\n  private initializeCustomUniforms(uniforms: UnstableUniformMap) {\n    for (const [name, val] of Object.entries(uniforms)) {\n      const location = this.gl.getUniformLocation(this.program, name);\n      if (!location) continue; // TODO: add error message\n\n      const inferred = getUniformType(val);\n\n      if (!inferred.valid) {\n        console.error(inferred.message);\n        continue;\n      }\n\n      this.uniforms.set(name, { type: inferred.type, location });\n\n      this.setUniformValue(name, val);\n    }\n  }\n\n  public setUniformValue(name: string, value: UniformMapValue) {\n    const uni = this.uniforms.get(name);\n    if (!uni) {\n      console.warn(`Uniform ${name} not found`);\n      return;\n    }\n\n    const { type, location } = uni;\n\n    switch (type) {\n      case \"float\":\n        if (isNumber(value)) this.gl.uniform1f(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a number`);\n        break;\n\n      case \"vec2\":\n        if (isVec2(value)) this.gl.uniform2fv(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a Vec2`);\n        break;\n\n      case \"vec3\":\n        if (isVec3(value)) this.gl.uniform3fv(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a Vec3`);\n        break;\n\n      case \"vec4\":\n        if (isVec4(value)) this.gl.uniform4fv(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a Vec4`);\n        break;\n\n      case \"int\":\n        if (isNumber(value)) this.gl.uniform1i(location, value);\n        else console.warn(`Couldn't update ${name}, value must be a number`);\n        break;\n\n      case \"bool\":\n        if (isBool(value)) this.gl.uniform1i(location, value ? 1 : 0);\n        else console.warn(`Couldn't update ${name}, value must be a boolean`);\n        break;\n\n      case \"image\":\n        if (isString(value)) this.loadStaticTexture(name, value);\n        else console.warn(`Couldn't update ${name}, value must be a string`);\n        break;\n\n      case \"video\":\n        if (isString(value)) this.loadDynamicTexture(name, value);\n        else console.warn(`Couldn't update ${name}, value must be a string`);\n        break;\n\n      case \"webcam\":\n        this.loadDynamicTexture(name);\n        break;\n\n      default:\n        console.warn(`Unsupported uniform type for ${name}`);\n    }\n  }\n\n  // TEXTURE METHODS ----------------------------------------------------\n\n  private getTextureUnit() {\n    return this.staticTextures.size + this.dynamicTextures.size;\n  }\n\n  private getUniformLocation(name: string) {\n    const location = this.gl.getUniformLocation(this.program, name);\n    if (!location) {\n      throw new Error(`Failed to retrieve unform loaction for ${name}`);\n    }\n    return location;\n  }\n\n  private initializeTexture(name: string) {\n    // Create a new texture\n    const location = this.getUniformLocation(name);\n    const texture = this.gl.createTexture();\n    const textureUnit = this.getTextureUnit();\n\n    // Set the sampler uniform to use the correct texture unit\n    this.gl.uniform1i(location, textureUnit);\n\n    // Use a placeholder pixel while the image loads\n    this.gl.activeTexture(this.gl.TEXTURE0 + textureUnit);\n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    updateTexture(this.gl);\n\n    return [texture, textureUnit] as const;\n  }\n\n  private loadStaticTexture(name: string, url: string) {\n    const [texture, textureUnit] = this.initializeTexture(name);\n\n    // Track the texture\n    this.staticTextures.set(name, { asset: texture, unit: textureUnit });\n\n    // Load the image\n    const image = new Image();\n    image.crossOrigin = \"anonymous\";\n\n    image.onload = () => {\n      try {\n        const texture = this.staticTextures.get(name);\n        const sizeName = `${name}_size`;\n        const sizeLocation = this.gl.getUniformLocation(this.program, sizeName);\n\n        if (sizeLocation && texture) {\n          this.uniforms.set(sizeName, { type: \"vec2\", location: sizeLocation });\n          this.gl.uniform2f(sizeLocation, image.width, image.height);\n          this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n          this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n          setTextureParams(this.gl, image);\n          updateTexture(this.gl, image);\n        }\n      } catch (error) {\n        console.error(`Error loading texture ${name}:`, error);\n      }\n    };\n\n    image.onerror = () => {\n      console.error(`Failed to load texture: ${url}`);\n    };\n\n    image.src = url;\n  }\n\n  private async loadDynamicTexture(name: string, url?: string) {\n    const video = document.createElement(\"video\");\n    video.muted = true;\n\n    video.onloadeddata = () => {\n      const [asset, unit] = this.initializeTexture(name);\n\n      // Track the texture\n      this.dynamicTextures.set(name, { video, asset, unit });\n\n      video.play();\n\n      try {\n        const texture = this.dynamicTextures.get(name);\n        const sizeName = `${name}_size`;\n        const sizeLocation = this.gl.getUniformLocation(this.program, sizeName);\n\n        if (sizeLocation && texture) {\n          this.uniforms.set(sizeName, { type: \"vec2\", location: sizeLocation });\n          this.gl.uniform2f(sizeLocation, video.videoWidth, video.videoHeight);\n          this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n          this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n          setTextureParams(this.gl, texture.video);\n          updateTexture(this.gl, texture.video);\n        }\n      } catch (error) {\n        console.error(`Error loading texture ${name}:`, error);\n      }\n    };\n\n    video.onerror = () => {\n      console.error(`Failed to load texture: ${url}`);\n    };\n\n    if (!url) {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      video.autoplay = true;\n      video.srcObject = stream;\n    } else {\n      video.loop = true;\n      video.crossOrigin = \"anonymous\";\n      video.src = url;\n    }\n  }\n\n  public renderDynamicTextures() {\n    for (const texture of Array.from(this.dynamicTextures.values())) {\n      this.gl.activeTexture(this.gl.TEXTURE0 + texture.unit);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, texture.asset);\n      this.gl.texImage2D(\n        this.gl.TEXTURE_2D,\n        0,\n        this.gl.RGBA,\n        this.gl.RGBA,\n        this.gl.UNSIGNED_BYTE,\n        texture.video\n      );\n    }\n  }\n\n  // LIFECYCLE METHODS ----------------------------------------------------\n\n  public destroy() {\n    this.staticTextures.forEach((txtr) => this.gl.deleteTexture(txtr.asset));\n    this.staticTextures.clear();\n    for (const texture of Array.from(this.dynamicTextures.values())) {\n      const src = texture.video.srcObject;\n      if (src instanceof MediaStream) {\n        src.getTracks().forEach((track) => track.stop());\n      } else {\n        texture.video.srcObject = null;\n      }\n    }\n    this.dynamicTextures.clear();\n  }\n}\n\nexport default GlslAssetManager;\n","const vertexShaderSource = `\n    attribute vec2 a_position;\n    void main() {\n      gl_Position = vec4(a_position, 0.0, 1.0);\n    }\n  `;\n\nconst fragmentShaderSource = `\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n\n    uniform float u_time;\n    uniform vec2 u_resolution;\n    uniform vec2 u_mouse;\n\n    void main() {\n      vec2 st = gl_FragCoord.xy / u_resolution;\n      vec2 mouse = u_mouse / u_resolution;\n\n      // Distance from the mouse\n      float dist = distance(st, mouse);\n      \n      // Color based on time and distance\n      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);\n      gl_FragColor = vec4(color, 1.0);\n    }\n  `;\n\nexport { vertexShaderSource, fragmentShaderSource };\n","import { getContext } from \"./utils\";\nimport { fragmentShaderSource, vertexShaderSource } from \"./shaders\";\n\nconst DEFAULT_VERTICES = new Float32Array([\n  -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1,\n]);\n\nclass GlslCanvas {\n  readonly container: HTMLElement;\n  readonly canvas: HTMLCanvasElement;\n  readonly gl: WebGLRenderingContext;\n  readonly program: WebGLProgram;\n\n  constructor(container: HTMLElement, frag?: string) {\n    this.container = container;\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.style.display = \"block\";\n    this.canvas.style.width = this.canvas.style.height = \"100%\";\n    this.container.appendChild(this.canvas);\n\n    this.gl = getContext(this.canvas);\n\n    const vertexShader = this.compileShader(\n      this.gl.VERTEX_SHADER,\n      vertexShaderSource\n    );\n\n    const fragmentShader = this.compileShader(\n      this.gl.FRAGMENT_SHADER,\n      frag ?? fragmentShaderSource\n    );\n\n    this.program = this.createProgram(vertexShader, fragmentShader);\n    this.gl.useProgram(this.program);\n    this.createBuffer(DEFAULT_VERTICES);\n\n    const a_Position = this.gl.getAttribLocation(this.program, \"a_position\");\n    this.gl.enableVertexAttribArray(a_Position);\n    this.gl.vertexAttribPointer(a_Position, 2, this.gl.FLOAT, false, 0, 0);\n  }\n\n  private compileShader(type: number, source: string) {\n    const shader = this.gl.createShader(type);\n    if (!shader) throw new Error(\"Shader creation failed\");\n\n    this.gl.shaderSource(shader, source);\n    this.gl.compileShader(shader);\n\n    if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n      this.gl.deleteShader(shader);\n      throw new Error(\n        `Shader compilation error: ${this.gl.getShaderInfoLog(shader)}`\n      );\n    }\n\n    return shader;\n  }\n\n  private createProgram(\n    vertexShader: WebGLShader,\n    fragmentShader: WebGLShader\n  ) {\n    const program = this.gl.createProgram();\n    if (!program) {\n      throw new Error(`Error creating WebGL Program`);\n    }\n    this.gl.attachShader(program, vertexShader);\n    this.gl.attachShader(program, fragmentShader);\n    this.gl.linkProgram(program);\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS)) {\n      throw new Error(\n        `Program linking error: ${this.gl.getProgramInfoLog(program)}`\n      );\n    }\n    return program;\n  }\n\n  private createBuffer(data: Float32Array) {\n    const buffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n    this.gl.bufferData(this.gl.ARRAY_BUFFER, data, this.gl.STATIC_DRAW);\n    return buffer;\n  }\n\n  public resizeCanvas() {\n    const rect = this.container.getBoundingClientRect();\n    this.canvas.width = rect.width;\n    this.canvas.height = rect.height;\n  }\n\n  public destroy() {\n    this.container.innerHTML = \"\";\n  }\n}\n\nexport default GlslCanvas;\nexport { DEFAULT_VERTICES };\n","// TODO: add demos for Basic, Uniform Updates, Static Textures, Dynamic Textures, Webcam Textures\n\nimport GlslAssetManager from \"./glsl-asset-manager\";\nimport GlslCanvas, { DEFAULT_VERTICES } from \"./glsl-canvas\";\nimport type {\n  UniformMap,\n  UniformConfigValue,\n  UnstableUniformMap,\n} from \"./types\";\n\nexport default class GlslRenderer extends GlslCanvas {\n  private mousePos = [0, 0];\n  private controller = new AbortController();\n  private rafId: number | null = null;\n  readonly assets: GlslAssetManager;\n\n  constructor(\n    container: HTMLElement,\n    frag?: string,\n    initialUniforms: UnstableUniformMap = {}\n  ) {\n    super(container, frag);\n    this.assets = new GlslAssetManager(this.gl, this.program, initialUniforms);\n\n    this.handleResize();\n    this.addEventListeners();\n  }\n\n  private render(time: number) {\n    this.gl.clearColor(0, 0, 0, 1);\n    this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n\n    // Pass uniforms\n    const uTime = this.assets.uniforms.get(\"u_time\");\n    if (uTime) {\n      this.gl.uniform1f(uTime.location, time * 0.001); // Time in seconds\n    }\n    const uMouse = this.assets.uniforms.get(\"u_mouse\");\n    if (uMouse) {\n      this.gl.uniform2f(uMouse.location, this.mousePos[0], this.mousePos[1]);\n    }\n\n    // render dynamic textures\n    this.assets.renderDynamicTextures();\n\n    // Draw\n    this.gl.drawArrays(this.gl.TRIANGLES, 0, DEFAULT_VERTICES.length / 2);\n\n    requestAnimationFrame((t) => this.render(t));\n  }\n\n  private handleResize() {\n    super.resizeCanvas();\n\n    const uRes = this.assets.uniforms.get(\"u_resolution\") ?? null;\n\n    if (!uRes) {\n      console.warn(\n        \"Could not find resolution uniform (u_resolution) location when resizing canvas\"\n      );\n      return;\n    }\n\n    this.gl.viewport(0, 0, this.canvas.width, this.canvas.height);\n    this.gl.uniform2f(uRes.location, this.canvas.width, this.canvas.height);\n  }\n\n  private addEventListeners() {\n    const { signal } = this.controller;\n\n    this.canvas.addEventListener(\n      \"mousemove\",\n      (event) => {\n        const rect = this.canvas.getBoundingClientRect();\n        this.mousePos[0] = event.clientX - rect.left;\n        this.mousePos[1] = rect.height - (event.clientY - rect.top); // Flip Y-axis\n      },\n      { signal }\n    );\n\n    window.addEventListener(\"resize\", () => this.handleResize(), { signal });\n  }\n\n  public play() {\n    this.rafId = requestAnimationFrame((t) => this.render(t));\n  }\n\n  public pause() {\n    if (typeof this.rafId === \"number\") {\n      cancelAnimationFrame(this.rafId);\n      this.rafId = null;\n    }\n  }\n\n  public updateUniform(name: string, value: UniformConfigValue) {\n    this.assets.setUniformValue(name, value);\n  }\n\n  public destroy() {\n    super.destroy();\n    this.assets.destroy();\n    this.controller.abort();\n  }\n}\n"]}