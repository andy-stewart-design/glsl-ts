"use strict";var d=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var z=Object.prototype.hasOwnProperty;var N=(e,i)=>{for(var r in i)d(e,r,{get:i[r],enumerable:!0})},W=(e,i,r,t)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of $(i))!z.call(e,s)&&s!==r&&d(e,s,{get:()=>i[s],enumerable:!(t=F(i,s))||t.enumerable});return e};var B=e=>W(d({},"__esModule",{value:!0}),e);var X={};N(X,{default:()=>h});module.exports=B(X);function u(e){return typeof e=="number"}function p(e){return typeof e=="string"}function x(e){return typeof e=="boolean"}function E(e){return Array.isArray(e)&&e.length===2&&e.every(u)}function b(e){return Array.isArray(e)&&e.length===3&&e.every(u)}function S(e){return Array.isArray(e)&&e.length===4&&e.every(u)}function L(e){let i=[".jpg",".jpeg",".png",".gif",".bmp",".webp",".svg",".tiff",".ico"],r=e.toLowerCase();return i.some(t=>r.endsWith(t))}function w(e){let i=[".mp4",".avi",".mov",".mkv",".wmv",".flv",".webm",".ts"],r=e.toLowerCase();return i.some(t=>r.endsWith(t))}function C(e){let i=e.getContext("webgl2");if(!i)throw new Error("WebGL not supported");return i}function m(e,i){let{TEXTURE_2D:r,RGBA:t,UNSIGNED_BYTE:s}=e,n=new Uint8Array([0,0,0,255]);i?e.texImage2D(e.TEXTURE_2D,0,t,t,s,i):e.texImage2D(r,0,t,1,1,0,t,s,n)}function T(e,i){_(i.width)&&_(i.height)?e.generateMipmap(e.TEXTURE_2D):(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR))}function _(e){return e>0&&(e&e-1)===0}function f(e){return typeof e=="string"?L(e)?{valid:!0,type:"image",value:e}:w(e)?{valid:!0,type:"video",value:e}:e==="webcam"?{valid:!0,type:"webcam",value:e}:!isNaN(Number(e))&&e.includes(".")?{valid:!0,type:"float",value:parseFloat(e)}:!isNaN(Number(e))&&!e.includes(".")?{valid:!0,type:"int",value:parseInt(e)}:{valid:!1,message:`Unknown uniform type: ${e}`}:Array.isArray(e)?e.length>=2&&e.length<=4?{valid:!0,type:`vec${e.length}`,value:e}:{valid:!1,message:`Invalid vector length: ${e.length}`}:typeof e=="number"?{valid:!0,type:"float",value:e}:typeof e=="boolean"?{valid:!0,type:"bool",value:e}:{valid:!1,message:`Unknown uniform type: ${e}`}}function R(e,i,r){return r==="snake"?`${i}_${e}`:`${i}${e}`}function c(e,i){return`[GLSL.TS]: Couldn't update ${e}, value must be a ${i}`}var v=class{constructor(i,r,t,s,n){this.uniforms=new Map;this.staticTextures=new Map;this.dynamicTextures=new Map;this.uniformPrefix="u";this.uniformCase="snake";this.gl=i,this.program=r,this.uniformPrefix=s,this.uniformCase=n,this.initializeDefaultUniforms(),this.initializeCustomUniforms(t)}initializeDefaultUniforms(){let i=this.formatUniform("time"),r=this.gl.getUniformLocation(this.program,i);r&&this.uniforms.set(i,{type:"float",location:r});let t=this.formatUniform("resolution"),s=this.gl.getUniformLocation(this.program,t);s&&this.uniforms.set(t,{type:"vec2",location:s});let n=this.formatUniform("mouse"),o=this.gl.getUniformLocation(this.program,n);o&&this.uniforms.set(n,{type:"vec2",location:o})}initializeCustomUniforms(i){for(let[r,t]of Object.entries(i)){let s=this.formatUniform(r),n=this.gl.getUniformLocation(this.program,s);if(!n){console.warn(`[GLSL.TS]: couldn't init uniform (${s}). Most likely, it was not used in shader and was optimized out.`);continue}let o=f(t);if(!o.valid){console.error(o.message);continue}this.uniforms.set(s,{type:o.type,location:n}),this.setUniformValue(r,o.value)}}setUniformValue(i,r){let t=this.formatUniform(i),s=this.uniforms.get(t);if(!s){console.warn(`[GLSL.TS]: uniform ${i} not found`);return}let{type:n,location:o}=s;switch(n){case"float":u(r)?this.gl.uniform1f(o,r):console.warn(c(t,"number"));break;case"vec2":E(r)?this.gl.uniform2fv(o,r):console.warn(c(t,"Vec2"));break;case"vec3":b(r)?this.gl.uniform3fv(o,r):console.warn(c(t,"Vec3"));break;case"vec4":S(r)?this.gl.uniform4fv(o,r):console.warn(c(t,"Vec4"));break;case"int":u(r)?this.gl.uniform1i(o,r):console.warn(c(t,"number"));break;case"bool":x(r)?this.gl.uniform1i(o,r?1:0):console.warn(c(t,"boolean"));break;case"image":p(r)?this.loadStaticTexture(t,r):console.warn(c(t,"string"));break;case"video":p(r)?this.loadDynamicTexture(t,r):console.warn(c(t,"string"));break;case"webcam":this.loadDynamicTexture(t);break;default:console.warn(`Unsupported uniform type for ${t}`)}}formatUniform(i){return R(i,this.uniformPrefix,this.uniformCase)}getTextureUnit(){return this.staticTextures.size+this.dynamicTextures.size}getUniformLocation(i){let r=this.gl.getUniformLocation(this.program,i);if(!r)throw new Error(`Failed to retrieve unform loaction for ${i}`);return r}initializeTexture(i){let r=this.getUniformLocation(i),t=this.gl.createTexture(),s=this.getTextureUnit();return this.gl.uniform1i(r,s),this.gl.activeTexture(this.gl.TEXTURE0+s),this.gl.bindTexture(this.gl.TEXTURE_2D,t),m(this.gl),[t,s]}loadStaticTexture(i,r){let[t,s]=this.initializeTexture(i);this.staticTextures.set(i,{asset:t,unit:s});let n=new Image;n.crossOrigin="anonymous",n.onload=()=>{try{let o=this.staticTextures.get(i),a=this.uniformCase==="snake"?`${i}_size`:`${i}Size`,l=this.gl.getUniformLocation(this.program,a);if(o){l?(this.uniforms.set(a,{type:"vec2",location:l}),this.gl.uniform2f(l,n.width,n.height)):console.info(`[GLSL.TS]: Could not set "${a}" Uniform. Most likely, it was not used in shader and was optimized out.`),this.gl.activeTexture(this.gl.TEXTURE0+o.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,o.asset),this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!0),T(this.gl,n),m(this.gl,n);let g=this.getUniformLocation(i);this.gl.uniform1i(g,o.unit)}else console.warn(`[GLSL.TS]: no texture found for name: ${i}`)}catch(o){console.error(`[GLSL.TS]: error loading texture ${i}:`,o)}},n.onerror=o=>{console.error(`[GLSL.TS]: error loading texture ${i}:`,o)},n.src=r}async loadDynamicTexture(i,r){let t=document.createElement("video");if(t.muted=!0,t.autoplay=!0,t.playsInline=!0,t.onloadeddata=()=>{let[s,n]=this.initializeTexture(i);this.dynamicTextures.set(i,{video:t,asset:s,unit:n}),t.play();try{let o=this.dynamicTextures.get(i),a=this.uniformCase==="snake"?`${i}_size`:`${i}Size`,l=this.gl.getUniformLocation(this.program,a);this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!0),o&&(l?(this.uniforms.set(a,{type:"vec2",location:l}),this.gl.uniform2f(l,t.videoWidth,t.videoHeight)):console.info(`[GLSL.TS]: Could not set "${a}" Uniform. Most likely, it was not used in shader and was optimized out.`),this.gl.activeTexture(this.gl.TEXTURE0+o.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,o.asset),T(this.gl,o.video),m(this.gl,o.video))}catch(o){console.error(`Error loading texture ${i}:`,o)}},t.onerror=()=>{console.error(`Failed to load texture: ${r}`)},r)t.loop=!0,t.crossOrigin="anonymous",t.src=r;else{let s=await navigator.mediaDevices.getUserMedia({video:!0});t.srcObject=s}}renderDynamicTextures(){for(let i of Array.from(this.dynamicTextures.values()))this.gl.activeTexture(this.gl.TEXTURE0+i.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,i.asset),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,i.video)}destroy(){this.staticTextures.forEach(i=>this.gl.deleteTexture(i.asset)),this.staticTextures.clear();for(let i of Array.from(this.dynamicTextures.values())){let r=i.video.srcObject;r instanceof MediaStream?r.getTracks().forEach(t=>t.stop()):i.video.srcObject=null}this.dynamicTextures.clear()}},A=v;var P=`
    attribute vec2 a_position;
    void main() {
      gl_Position = vec4(a_position, 0.0, 1.0);
    }
  `,V=`#version 300 es
    in vec2 a_position;
    
    void main() {
      gl_Position = vec4(a_position, 0.0, 1.0);
    }`,I=`
    #ifdef GL_ES
    precision mediump float;
    #endif

    uniform float u_time;
    uniform vec2 u_resolution;
    uniform vec2 u_mouse;

    void main() {
      vec2 st = gl_FragCoord.xy / u_resolution;
      vec2 mouse = u_mouse / u_resolution;

      // Distance from the mouse
      float dist = distance(st, mouse);
      
      // Color based on time and distance
      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);
      gl_FragColor = vec4(color, 1.0);
    }
  `,D=`#version 300 es
    precision mediump float;

    uniform float u_time;
    uniform vec2 u_resolution;
    uniform vec2 u_mouse;

    void main() {
      vec2 st = gl_FragCoord.xy / u_resolution;
      vec2 mouse = u_mouse / u_resolution;

      // Distance from the mouse
      float dist = distance(st, mouse);
      
      // Color based on time and distance
      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);
      gl_FragColor = vec4(color, 1.0);
    }
  `;var U=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),y=class{constructor(i,r,t){this.container=i,this.canvas=document.createElement("canvas"),this.canvas.style.display="block",this.canvas.style.width=this.canvas.style.height="100%",this.container.appendChild(this.canvas),this.gl=C(this.canvas),this.gl.clearColor(0,0,0,1),"drawingBufferColorSpace"in this.gl&&(this.gl.drawingBufferColorSpace="display-p3"),"unpackColorSpace"in this.gl&&(this.gl.unpackColorSpace="display-p3");let s=r===3?D:I,n=r===3?V:P,o=this.compileShader(n,"vert"),a=this.compileShader(t??s,"frag");this.program=this.createProgram(o,a),this.gl.useProgram(this.program),this.createBuffer(U);let l=this.gl.getAttribLocation(this.program,"a_position");this.gl.enableVertexAttribArray(l),this.gl.vertexAttribPointer(l,2,this.gl.FLOAT,!1,0,0)}compileShader(i,r){let t=this.gl.createShader(r==="frag"?this.gl.FRAGMENT_SHADER:this.gl.VERTEX_SHADER);if(!t)throw new Error("Shader creation failed");if(this.gl.shaderSource(t,i),this.gl.compileShader(t),!this.gl.getShaderParameter(t,this.gl.COMPILE_STATUS)){let s=`Shader compilation error: ${this.gl.getShaderInfoLog(t)}`;throw this.gl.deleteShader(t),new Error(s)}return t}createProgram(i,r){let t=this.gl.createProgram();if(this.gl.attachShader(t,i),this.gl.attachShader(t,r),this.gl.linkProgram(t),!this.gl.getProgramParameter(t,this.gl.LINK_STATUS))throw new Error(`Program linking error: ${this.gl.getProgramInfoLog(t)}`);return t}createBuffer(i){let r=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,r),this.gl.bufferData(this.gl.ARRAY_BUFFER,i,this.gl.STATIC_DRAW),r}resizeCanvas(){let i=this.container.getBoundingClientRect();this.canvas.width=i.width,this.canvas.height=i.height}destroy(){this.container.innerHTML=""}},G=y;var h=class extends G{constructor({container:r,frag:t,uniforms:s={},uniformPrefix:n="u",uniformCase:o="snake",glVersion:a=3}){super(r,a,t);this.mousePos=[0,0];this.controller=new AbortController;this.rafId=null;this.startTime=null;this.pauseStartTime=null;this.lastRenderTime=0;this.totalPausedTime=0;this.assets=new A(this.gl,this.program,s,n,o),this.handleResize(),this.addEventListeners(),setTimeout(()=>console.log(this.uniforms),1e3)}render(r,t=!0){if(this.startTime===null)return;this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.lastRenderTime=r;let s=this.assets.uniforms.get(this.assets.formatUniform("time"));if(s){let a=r-this.totalPausedTime-this.startTime;this.gl.uniform1f(s.location,a*.001)}let n=this.assets.uniforms.get(this.assets.formatUniform("mouse"));n&&this.gl.uniform2f(n.location,this.mousePos[0],this.mousePos[1]),this.assets.renderDynamicTextures(),this.gl.drawArrays(this.gl.TRIANGLES,0,U.length/2),t&&(this.rafId=requestAnimationFrame(o=>this.render(o)))}handleResize(){super.resizeCanvas();let r=this.assets.formatUniform("resolution"),t=this.assets.uniforms.get(r)??null;if(!t){console.warn(`Could not find resolution uniform (${r}) location when resizing canvas`);return}this.gl.viewport(0,0,this.canvas.width,this.canvas.height),this.gl.uniform2f(t.location,this.canvas.width,this.canvas.height),this.render(this.lastRenderTime,!1)}addEventListeners(){let{signal:r}=this.controller;this.canvas.addEventListener("mousemove",t=>{let s=this.canvas.getBoundingClientRect();this.mousePos[0]=t.clientX-s.left,this.mousePos[1]=s.height-(t.clientY-s.top)},{signal:r}),this.canvas.addEventListener("touchmove",t=>{let{clientX:s,clientY:n}=t.touches[0],o=this.canvas.getBoundingClientRect();this.mousePos[0]=s-o.left,this.mousePos[1]=o.height-(n-o.top)},{signal:r}),window.addEventListener("resize",()=>this.handleResize(),{signal:r})}play(r=!0){this.paused&&(this.pauseStartTime!==null?(this.totalPausedTime+=performance.now()-this.pauseStartTime,this.pauseStartTime=null):this.totalPausedTime=performance.now(),this.startTime===null&&(this.startTime=performance.now()),this.assets.dynamicTextures.size>0&&this.assets.dynamicTextures.forEach(t=>{t.video.play()}),r?this.rafId=requestAnimationFrame(t=>this.render(t,r)):this.render(performance.now(),r))}pause(){typeof this.rafId!="number"||this.paused||(this.pauseStartTime=performance.now(),cancelAnimationFrame(this.rafId),this.rafId=null,this.assets.dynamicTextures.size>0&&this.assets.dynamicTextures.forEach(r=>{r.video.pause()}))}updateUniform(r,t){let s=f(t);if(!s.valid){console.warn(s.message);return}this.assets.setUniformValue(r,s.value)}destroy(){super.destroy(),this.assets.destroy(),this.controller.abort()}get paused(){return this.rafId===null}get uniforms(){let r=Object.fromEntries(this.assets.uniforms),s=Object.entries(r).map(([n,{location:o,type:a}])=>{switch(a){case"vec2":case"vec3":case"vec4":let l=this.gl.getUniform(this.program,o);return[n,Array.from(l)];case"image":let g=this.assets.staticTextures.get(n);return[n,g?.asset];case"video":case"webcam":let M=this.assets.dynamicTextures.get(n);return[n,M?.asset];default:let k=this.gl.getUniform(this.program,o);return[n,k]}});return Object.fromEntries(s)}};
//# sourceMappingURL=index.cjs.map