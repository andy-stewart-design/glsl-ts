function u(t){return typeof t=="number"}function p(t){return typeof t=="string"}function x(t){return typeof t=="boolean"}function L(t){return Array.isArray(t)&&t.length===2&&t.every(u)}function E(t){return Array.isArray(t)&&t.length===3&&t.every(u)}function S(t){return Array.isArray(t)&&t.length===4&&t.every(u)}function m(t){if(typeof t!="string")return!1;let s=[".jpg",".jpeg",".png",".avif",".webp"],i=t.toLowerCase();return s.some(e=>i.endsWith(e))}function h(t){if(typeof t!="string")return!1;let s=[".mp4",".webm",".mov"],i=t.toLowerCase();return s.some(e=>i.endsWith(e))}function C(t){let s=t.getContext("webgl2");if(!s)throw new Error("WebGL not supported");return s}function f(t,s){let{TEXTURE_2D:i,RGBA:e,UNSIGNED_BYTE:r}=t,n=new Uint8Array([0,0,0,255]);s?t.texImage2D(t.TEXTURE_2D,0,e,e,r,s):t.texImage2D(i,0,e,1,1,0,e,r,n)}function v(t,s){w(s.width)&&w(s.height)?t.generateMipmap(t.TEXTURE_2D):(t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR))}function w(t){return t>0&&(t&t-1)===0}function d(t){return typeof t=="string"?m(t)?{valid:!0,type:"image",value:t}:h(t)?{valid:!0,type:"video",value:t}:t==="webcam"?{valid:!0,type:"webcam",value:t}:!isNaN(Number(t))&&t.includes(".")?{valid:!0,type:"float",value:parseFloat(t)}:!isNaN(Number(t))&&!t.includes(".")?{valid:!0,type:"int",value:parseInt(t)}:{valid:!1,message:`Unknown uniform type: ${t}`}:Array.isArray(t)?t.length>=2&&t.length<=4?{valid:!0,type:`vec${t.length}`,value:t}:{valid:!1,message:`Invalid vector length: ${t.length}`}:typeof t=="number"?{valid:!0,type:"float",value:t}:typeof t=="boolean"?{valid:!0,type:"bool",value:t}:{valid:!1,message:`Unknown uniform type: ${t}`}}function c(t,s){return`[GLSL.TS]: Couldn't update ${t}, value must be a ${s}`}function _(t,s,i){if(i==="snake")return`${s}_${t}`;{let e=t.charAt(0).toUpperCase()+t.slice(1);return`${s}${e}`}}var T=class{constructor(s,i,e,r,n){this.uniforms=new Map;this.staticTextures=new Map;this.dynamicTextures=new Map;this.uniformPrefix="u";this.uniformCase="snake";this.loadedAssetCount={images:0,videos:0};this.gl=s,this.program=i,this.uniformPrefix=r,this.uniformCase=n,this.totalAssetCount=Object.values(e).reduce((o,a)=>(m(a)&&o.images++,(h(a)||a==="webcam")&&o.videos++,o),{images:0,videos:0}),this.initializeDefaultUniforms(),this.initializeCustomUniforms(e)}initializeDefaultUniforms(){let s=this.formatUniform("time"),i=this.gl.getUniformLocation(this.program,s);i&&this.uniforms.set(s,{type:"float",location:i});let e=this.formatUniform("resolution"),r=this.gl.getUniformLocation(this.program,e);r&&this.uniforms.set(e,{type:"vec2",location:r});let n=this.formatUniform("mouse"),o=this.gl.getUniformLocation(this.program,n);o&&this.uniforms.set(n,{type:"vec2",location:o})}initializeCustomUniforms(s){for(let[i,e]of Object.entries(s)){let r=this.formatUniform(i),n=this.gl.getUniformLocation(this.program,r);if(!n){console.warn(`[GLSL.TS]: couldn't init uniform (${r}). Most likely, it was not used in shader and was optimized out.`);continue}let o=d(e);if(!o.valid){console.error(o.message);continue}this.uniforms.set(r,{type:o.type,location:n}),this.setUniformValue(i,o.value)}}setUniformValue(s,i){let e=this.formatUniform(s),r=this.uniforms.get(e);if(!r){console.warn(`[GLSL.TS]: uniform ${s} not found`);return}let{type:n,location:o}=r;switch(n){case"float":u(i)?this.gl.uniform1f(o,i):console.warn(c(e,"number"));break;case"vec2":L(i)?this.gl.uniform2fv(o,i):console.warn(c(e,"Vec2"));break;case"vec3":E(i)?this.gl.uniform3fv(o,i):console.warn(c(e,"Vec3"));break;case"vec4":S(i)?this.gl.uniform4fv(o,i):console.warn(c(e,"Vec4"));break;case"int":u(i)?this.gl.uniform1i(o,i):console.warn(c(e,"number"));break;case"bool":x(i)?this.gl.uniform1i(o,i?1:0):console.warn(c(e,"boolean"));break;case"image":p(i)?this.loadStaticTexture(e,i):console.warn(c(e,"string"));break;case"video":p(i)?this.loadDynamicTexture(e,i):console.warn(c(e,"string"));break;case"webcam":this.loadDynamicTexture(e);break;default:console.warn(`Unsupported uniform type for ${e}`)}}formatUniform(s){return _(s,this.uniformPrefix,this.uniformCase)}getTextureUnit(){return this.staticTextures.size+this.dynamicTextures.size}getUniformLocation(s){let i=this.gl.getUniformLocation(this.program,s);if(!i)throw new Error(`Failed to retrieve unform loaction for ${s}`);return i}initializeTexture(s){let i=this.getUniformLocation(s),e=this.gl.createTexture(),r=this.getTextureUnit();return this.gl.uniform1i(i,r),this.gl.activeTexture(this.gl.TEXTURE0+r),this.gl.bindTexture(this.gl.TEXTURE_2D,e),f(this.gl),[e,r]}loadStaticTexture(s,i){let[e,r]=this.initializeTexture(s),n=this.uniformCase==="snake"?`${s}_resolution`:`${s}Resolution`,o=this.gl.getUniformLocation(this.program,n);this.staticTextures.set(s,{asset:e,unit:r}),o&&this.uniforms.set(n,{type:"vec2",location:o});let a=new Image;a.crossOrigin="anonymous",a.onload=()=>{try{let l=this.staticTextures.get(s);if(l){o?(this.uniforms.set(n,{type:"vec2",location:o}),this.gl.uniform2f(o,a.width,a.height)):console.info(`[GLSL.TS]: Could not set "${n}" Uniform. Most likely, it was not used in shader and was optimized out.`),this.gl.activeTexture(this.gl.TEXTURE0+l.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,l.asset),this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!0),v(this.gl,a),f(this.gl,a);let g=this.getUniformLocation(s);this.gl.uniform1i(g,l.unit),this.loadedAssetCount.images++,this.allAssetsLoaded&&this.onLoad?.()}else console.warn(`[GLSL.TS]: no texture found for name: ${s}`)}catch(l){console.error(`[GLSL.TS]: error loading texture ${s}:`,l)}},a.onerror=l=>{console.error(`[GLSL.TS]: error loading texture ${s}:`,l)},a.src=i}async loadDynamicTexture(s,i){let e=document.createElement("video");if(e.muted=!0,e.autoplay=!0,e.playsInline=!0,e.onloadeddata=()=>{let[r,n]=this.initializeTexture(s),o=this.uniformCase==="snake"?`${s}_resolution`:`${s}Resolution`,a=this.gl.getUniformLocation(this.program,o);a&&this.uniforms.set(o,{type:"vec2",location:a}),this.dynamicTextures.set(s,{video:e,asset:r,unit:n}),e.play();try{let l=this.dynamicTextures.get(s);this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL,!0),l&&(a?(this.uniforms.set(o,{type:"vec2",location:a}),this.gl.uniform2f(a,e.videoWidth,e.videoHeight)):console.info(`[GLSL.TS]: Could not set "${o}" Uniform. Most likely, it was not used in shader and was optimized out.`),this.gl.activeTexture(this.gl.TEXTURE0+l.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,l.asset),v(this.gl,l.video),f(this.gl,l.video)),this.loadedAssetCount.videos++,this.allAssetsLoaded&&this.onLoad?.()}catch(l){console.error(`[GLSL.TS]: Error loading texture ${s}:`,l)}},e.onerror=()=>{console.error(`[GLSL.TS]: Failed to load texture: ${i}`)},i)e.loop=!0,e.crossOrigin="anonymous",e.src=i;else{let r=await navigator.mediaDevices.getUserMedia({video:!0});e.srcObject=r}}renderDynamicTextures(){for(let s of Array.from(this.dynamicTextures.values()))this.gl.activeTexture(this.gl.TEXTURE0+s.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,s.asset),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,s.video)}destroy(){this.staticTextures.forEach(s=>this.gl.deleteTexture(s.asset)),this.staticTextures.clear();for(let s of Array.from(this.dynamicTextures.values())){let i=s.video.srcObject;i instanceof MediaStream?i.getTracks().forEach(e=>e.stop()):s.video.srcObject=null}this.dynamicTextures.clear()}get allAssetsLoaded(){return this.totalAssetCount.images===this.loadedAssetCount.images&&this.totalAssetCount.videos===this.loadedAssetCount.videos}},A=T;var R=`
    attribute vec2 a_position;
    void main() {
      gl_Position = vec4(a_position, 0.0, 1.0);
    }
  `,P=`#version 300 es
    in vec2 a_position;
    
    void main() {
      gl_Position = vec4(a_position, 0.0, 1.0);
    }`,V=`
    #ifdef GL_ES
    precision mediump float;
    #endif

    uniform float u_time;
    uniform vec2 u_resolution;
    uniform vec2 u_mouse;

    void main() {
      vec2 st = gl_FragCoord.xy / u_resolution;
      vec2 mouse = u_mouse / u_resolution;

      // Distance from the mouse
      float dist = distance(st, mouse);
      
      // Color based on time and distance
      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);
      gl_FragColor = vec4(color, 1.0);
    }
  `,I=`#version 300 es
    precision mediump float;

    uniform float u_time;
    uniform vec2 u_resolution;
    uniform vec2 u_mouse;

    out vec4 outColor;

    void main() {
      vec2 st = gl_FragCoord.xy / u_resolution;
      vec2 mouse = u_mouse / u_resolution;

      // Distance from the mouse
      float dist = distance(st, mouse);
      
      // Color based on time and distance
      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);
      outColor = vec4(color, 1.0);
    }
  `;var U=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),y=class{constructor(s,i,e){this.container=s,this.canvas=document.createElement("canvas"),this.canvas.style.display="block",this.canvas.style.width=this.canvas.style.height="100%",this.container.appendChild(this.canvas),this.gl=C(this.canvas),this.gl.clearColor(0,0,0,1),"drawingBufferColorSpace"in this.gl&&(this.gl.drawingBufferColorSpace="display-p3"),"unpackColorSpace"in this.gl&&(this.gl.unpackColorSpace="display-p3");let r=i===3?I:V,n=i===3?P:R,o=this.compileShader(n,"vert"),a=this.compileShader(e??r,"frag");this.program=this.createProgram(o,a),this.gl.useProgram(this.program),this.createBuffer(U);let l=this.gl.getAttribLocation(this.program,"a_position");this.gl.enableVertexAttribArray(l),this.gl.vertexAttribPointer(l,2,this.gl.FLOAT,!1,0,0)}compileShader(s,i){let e=this.gl.createShader(i==="frag"?this.gl.FRAGMENT_SHADER:this.gl.VERTEX_SHADER);if(!e)throw new Error("Shader creation failed");if(this.gl.shaderSource(e,s),this.gl.compileShader(e),!this.gl.getShaderParameter(e,this.gl.COMPILE_STATUS)){let r=`Shader compilation error: ${this.gl.getShaderInfoLog(e)}`;throw this.gl.deleteShader(e),new Error(r)}return e}createProgram(s,i){let e=this.gl.createProgram();if(this.gl.attachShader(e,s),this.gl.attachShader(e,i),this.gl.linkProgram(e),!this.gl.getProgramParameter(e,this.gl.LINK_STATUS))throw new Error(`Program linking error: ${this.gl.getProgramInfoLog(e)}`);return e}createBuffer(s){let i=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,i),this.gl.bufferData(this.gl.ARRAY_BUFFER,s,this.gl.STATIC_DRAW),i}resizeCanvas(){let s=this.container.getBoundingClientRect();this.canvas.width=s.width,this.canvas.height=s.height}destroy(){this.container.innerHTML=""}},D=y;var b=class extends D{constructor({container:i,frag:e,uniforms:r={},uniformPrefix:n="u",uniformCase:o="snake",glVersion:a=3}){super(i,a,e);this.mousePos=[0,0];this.controller=new AbortController;this.resizeObserver=null;this.rafId=null;this.startTime=null;this.pauseStartTime=null;this.lastRenderTime=0;this.totalPausedTime=0;this.assets=new A(this.gl,this.program,r,n,o),this.handleResize(),this.addEventListeners()}render(i,e=!0){if(this.startTime===null)return;this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.lastRenderTime=i;let r=this.assets.uniforms.get(this.assets.formatUniform("time"));if(r){let a=i-this.totalPausedTime-this.startTime;this.gl.uniform1f(r.location,a*.001)}let n=this.assets.uniforms.get(this.assets.formatUniform("mouse"));n&&this.gl.uniform2f(n.location,this.mousePos[0],this.mousePos[1]),this.assets.renderDynamicTextures(),this.gl.drawArrays(this.gl.TRIANGLES,0,U.length/2),e&&(this.rafId=requestAnimationFrame(o=>this.render(o)))}handleResize(){super.resizeCanvas();let i=this.assets.formatUniform("resolution"),e=this.assets.uniforms.get(i)??null;if(!e){console.warn(`Could not find resolution uniform (${i}) location when resizing canvas`);return}this.gl.viewport(0,0,this.canvas.width,this.canvas.height),this.gl.uniform2f(e.location,this.canvas.width,this.canvas.height),this.render(this.lastRenderTime,!1)}addEventListeners(){let{signal:i}=this.controller;this.canvas.addEventListener("mousemove",e=>{let r=this.canvas.getBoundingClientRect();this.mousePos[0]=e.clientX-r.left,this.mousePos[1]=r.height-(e.clientY-r.top)},{signal:i}),this.canvas.addEventListener("touchmove",e=>{let{clientX:r,clientY:n}=e.touches[0],o=this.canvas.getBoundingClientRect();this.mousePos[0]=r-o.left,this.mousePos[1]=o.height-(n-o.top)},{signal:i}),this.resizeObserver=new ResizeObserver(()=>{this.handleResize()}),this.resizeObserver.observe(this.container)}play(i=!0){this.paused&&(this.pauseStartTime!==null?(this.totalPausedTime+=performance.now()-this.pauseStartTime,this.pauseStartTime=null):this.totalPausedTime=performance.now(),this.startTime===null&&(this.startTime=performance.now()),this.assets.dynamicTextures.size>0&&this.assets.dynamicTextures.forEach(e=>{e.video.play()}),i?this.rafId=requestAnimationFrame(e=>this.render(e,i)):this.render(performance.now(),i))}pause(){typeof this.rafId!="number"||this.paused||(this.pauseStartTime=performance.now(),cancelAnimationFrame(this.rafId),this.rafId=null,this.assets.dynamicTextures.size>0&&this.assets.dynamicTextures.forEach(i=>{i.video.pause()}))}updateUniform(i,e){let r=d(e);if(!r.valid){console.warn(r.message);return}this.assets.setUniformValue(i,r.value)}destroy(){super.destroy(),this.assets.destroy(),this.controller.abort(),this.resizeObserver?.unobserve(this.container),this.resizeObserver?.disconnect()}get paused(){return this.rafId===null}get uniforms(){let i=Object.fromEntries(this.assets.uniforms),r=Object.entries(i).map(([n,{location:o,type:a}])=>{switch(a){case"vec2":case"vec3":case"vec4":let l=this.gl.getUniform(this.program,o);return[n,Array.from(l)];case"image":let g=this.assets.staticTextures.get(n);return[n,g?.asset];case"video":case"webcam":let G=this.assets.dynamicTextures.get(n);return[n,G?.asset];default:let k=this.gl.getUniform(this.program,o);return[n,k]}});return Object.fromEntries(r)}set onLoad(i){this.assets.allAssetsLoaded?i():this.assets.onLoad=i}};export{b as default};
//# sourceMappingURL=index.js.map