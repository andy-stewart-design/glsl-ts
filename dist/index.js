function E(r){let t=r.getContext("webgl");if(!t)throw new Error("WebGL not supported");return t}function l(r,t){let{TEXTURE_2D:e,RGBA:i,UNSIGNED_BYTE:s}=r,o=new Uint8Array([0,0,0,255]);t?r.texImage2D(r.TEXTURE_2D,0,i,i,s,t):r.texImage2D(e,0,i,1,1,0,i,s,o);}function h(r,t){T(t.width)&&T(t.height)?r.generateMipmap(r.TEXTURE_2D):(r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.LINEAR));}function T(r){return r>0&&(r&r-1)===0}function c(r){return typeof r=="number"}function m(r){return typeof r=="string"}function x(r){return typeof r=="boolean"}function b(r){return Array.isArray(r)&&r.length===2&&r.every(c)}function y(r){return Array.isArray(r)&&r.length===3&&r.every(c)}function v(r){return Array.isArray(r)&&r.length===4&&r.every(c)}var g=class{constructor(t,e,i={}){this.uniforms=new Map;this.staticTextures=new Map;this.dynamicTextures=new Map;this.gl=t,this.program=e,this.initializeDefaultUniforms(),this.initializeCustomUniforms(i);}initializeDefaultUniforms(){let t=this.gl.getUniformLocation(this.program,"u_time");t&&this.uniforms.set("u_time",{type:"float",location:t});let e=this.gl.getUniformLocation(this.program,"u_resolution");e&&this.uniforms.set("u_resolution",{type:"vec2",location:e});let i=this.gl.getUniformLocation(this.program,"u_mouse");i&&this.uniforms.set("u_mouse",{type:"vec2",location:i});}initializeCustomUniforms(t){for(let[e,i]of Object.entries(t)){let s=this.gl.getUniformLocation(this.program,e);if(!s)continue;this.uniforms.set(e,{type:i.type,location:s});let o="value"in i?i.value:void 0;this.setUniformValue(e,o);}}setUniformValue(t,e){let i=this.uniforms.get(t);if(!i){console.warn(`Uniform ${t} not found`);return}let{type:s,location:o}=i;switch(s){case "float":c(e)?this.gl.uniform1f(o,e):console.warn(`Couldn't update ${t}, value must be a number`);break;case "vec2":b(e)?this.gl.uniform2fv(o,e):console.warn(`Couldn't update ${t}, value must be a Vec2`);break;case "vec3":y(e)?this.gl.uniform3fv(o,e):console.warn(`Couldn't update ${t}, value must be a Vec3`);break;case "vec4":v(e)?this.gl.uniform4fv(o,e):console.warn(`Couldn't update ${t}, value must be a Vec4`);break;case "int":c(e)?this.gl.uniform1i(o,e):console.warn(`Couldn't update ${t}, value must be a number`);break;case "bool":x(e)?this.gl.uniform1i(o,e?1:0):console.warn(`Couldn't update ${t}, value must be a boolean`);break;case "image":m(e)?this.loadStaticTexture(t,e):console.warn(`Couldn't update ${t}, value must be a string`);break;case "video":m(e)?this.loadDynamicTexture(t,e):console.warn(`Couldn't update ${t}, value must be a string`);break;case "webcam":this.loadDynamicTexture(t);break;default:console.warn(`Unsupported uniform type for ${t}`);}}getTextureUnit(){return this.staticTextures.size+this.dynamicTextures.size}getUniformLocation(t){let e=this.gl.getUniformLocation(this.program,t);if(!e)throw new Error(`Failed to retrieve unform loaction for ${t}`);return e}initializeTexture(t){let e=this.getUniformLocation(t),i=this.gl.createTexture(),s=this.getTextureUnit();return this.gl.uniform1i(e,s),this.gl.activeTexture(this.gl.TEXTURE0+s),this.gl.bindTexture(this.gl.TEXTURE_2D,i),l(this.gl),[i,s]}loadStaticTexture(t,e){let[i,s]=this.initializeTexture(t);this.staticTextures.set(t,{asset:i,unit:s});let o=new Image;o.crossOrigin="anonymous",o.onload=()=>{try{let n=this.staticTextures.get(t),u=`${t}_size`,a=this.gl.getUniformLocation(this.program,u);a&&n&&(this.uniforms.set(u,{type:"vec2",location:a}),this.gl.uniform2f(a,o.width,o.height),this.gl.activeTexture(this.gl.TEXTURE0+n.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,n.asset),h(this.gl,o),l(this.gl,o));}catch(n){console.error(`Error loading texture ${t}:`,n);}},o.onerror=()=>{console.error(`Failed to load texture: ${e}`);},o.src=e;}async loadDynamicTexture(t,e){let i=document.createElement("video");if(i.muted=true,i.onloadeddata=()=>{let[s,o]=this.initializeTexture(t);this.dynamicTextures.set(t,{video:i,asset:s,unit:o}),i.play();try{let n=this.dynamicTextures.get(t),u=`${t}_size`,a=this.gl.getUniformLocation(this.program,u);a&&n&&(this.uniforms.set(u,{type:"vec2",location:a}),this.gl.uniform2f(a,640,480),this.gl.activeTexture(this.gl.TEXTURE0+n.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,n.asset),h(this.gl,n.video),l(this.gl,n.video));}catch(n){console.error(`Error loading texture ${t}:`,n);}},i.onerror=()=>{console.error(`Failed to load texture: ${e}`);},e)i.loop=true,i.crossOrigin="anonymous",i.src=e;else {let s=await navigator.mediaDevices.getUserMedia({video:true});i.autoplay=true,i.srcObject=s;}}renderDynamicTextures(){for(let t of Array.from(this.dynamicTextures.values()))this.gl.activeTexture(this.gl.TEXTURE0+t.unit),this.gl.bindTexture(this.gl.TEXTURE_2D,t.asset),this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.gl.RGBA,this.gl.UNSIGNED_BYTE,t.video);}destroy(){this.staticTextures.forEach(t=>this.gl.deleteTexture(t.asset)),this.staticTextures.clear();for(let t of Array.from(this.dynamicTextures.values())){let e=t.video.srcObject;e instanceof MediaStream?e.getTracks().forEach(i=>i.stop()):t.video.srcObject=null;}this.dynamicTextures.clear();}},U=g;var _=`
    attribute vec2 a_position;
    void main() {
      gl_Position = vec4(a_position, 0.0, 1.0);
    }
  `,L=`
    #ifdef GL_ES
    precision mediump float;
    #endif

    uniform float u_time;
    uniform vec2 u_resolution;
    uniform vec2 u_mouse;

    void main() {
      vec2 st = gl_FragCoord.xy / u_resolution;
      vec2 mouse = u_mouse / u_resolution;

      // Distance from the mouse
      float dist = distance(st, mouse);
      
      // Color based on time and distance
      vec3 color = vec3(0.5 + 0.5 * cos(u_time + dist * 10.0), dist, st.x);
      gl_FragColor = vec4(color, 1.0);
    }
  `;var d=new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),f=class{constructor(t,e){this.container=t,this.canvas=document.createElement("canvas"),this.canvas.style.display="block",this.container.appendChild(this.canvas),this.gl=E(this.canvas);let i=this.compileShader(this.gl.VERTEX_SHADER,_),s=this.compileShader(this.gl.FRAGMENT_SHADER,e??L);this.program=this.createProgram(i,s),this.gl.useProgram(this.program),this.createBuffer(d);let o=this.gl.getAttribLocation(this.program,"a_position");this.gl.enableVertexAttribArray(o),this.gl.vertexAttribPointer(o,2,this.gl.FLOAT,false,0,0);}compileShader(t,e){let i=this.gl.createShader(t);if(!i)throw new Error("Shader creation failed");if(this.gl.shaderSource(i,e),this.gl.compileShader(i),!this.gl.getShaderParameter(i,this.gl.COMPILE_STATUS))throw this.gl.deleteShader(i),new Error(`Shader compilation error: ${this.gl.getShaderInfoLog(i)}`);return i}createProgram(t,e){let i=this.gl.createProgram();if(!i)throw new Error("Error creating WebGL Program");if(this.gl.attachShader(i,t),this.gl.attachShader(i,e),this.gl.linkProgram(i),!this.gl.getProgramParameter(i,this.gl.LINK_STATUS))throw new Error(`Program linking error: ${this.gl.getProgramInfoLog(i)}`);return i}createBuffer(t){let e=this.gl.createBuffer();return this.gl.bindBuffer(this.gl.ARRAY_BUFFER,e),this.gl.bufferData(this.gl.ARRAY_BUFFER,t,this.gl.STATIC_DRAW),e}resizeCanvas(){let t=this.container.getBoundingClientRect();this.canvas.width=t.width,this.canvas.height=t.height;}destroy(){this.container.innerHTML="";}},w=f;var p=class extends w{constructor(e,i,s={}){super(e,i);this.mousePos=[0,0];this.controller=new AbortController;this.rafId=null;this.assets=new U(this.gl,this.program,s),this.handleResize(),this.addEventListeners();}render(e){this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT);let i=this.assets.uniforms.get("u_time");i&&this.gl.uniform1f(i.location,e*.001);let s=this.assets.uniforms.get("u_mouse");s&&this.gl.uniform2f(s.location,this.mousePos[0],this.mousePos[1]),this.assets.renderDynamicTextures(),this.gl.drawArrays(this.gl.TRIANGLES,0,d.length/2),requestAnimationFrame(o=>this.render(o));}handleResize(){super.resizeCanvas();let e=this.assets.uniforms.get("u_resolution")??null;if(!e){console.warn("Could not find resolution uniform (u_resolution) location when resizing canvas");return}this.gl.viewport(0,0,this.canvas.width,this.canvas.height),this.gl.uniform2f(e.location,this.canvas.width,this.canvas.height);}addEventListeners(){let{signal:e}=this.controller;this.canvas.addEventListener("mousemove",i=>{let s=this.canvas.getBoundingClientRect();this.mousePos[0]=i.clientX-s.left,this.mousePos[1]=s.height-(i.clientY-s.top);},{signal:e}),window.addEventListener("resize",()=>this.handleResize(),{signal:e});}play(){this.rafId=requestAnimationFrame(e=>this.render(e));}pause(){typeof this.rafId=="number"&&(cancelAnimationFrame(this.rafId),this.rafId=null);}updateUniform(e,i){this.assets.setUniformValue(e,i);}destroy(){super.destroy(),this.assets.destroy(),this.controller.abort();}};export{p as default};//# sourceMappingURL=index.js.map
//# sourceMappingURL=index.js.map