---
import Layout from "@/layouts/Layout.astro";
import { getSketches, formatPathSegment } from "@/utils/get-sketches";

const sketchImports = import.meta.glob("@/pages/**/_sketch.frag", {
  query: "?raw",
});
const metaImports = import.meta.glob("@/pages/**/_meta.json", {
  query: "?raw",
});
const sketches = await getSketches(sketchImports, metaImports);
const sketchesByCategory = Object.groupBy(sketches, (page) => page.category.id);
---

<Layout>
  <main>
    <section class="header">
      <a
        class="header-github"
        href="https://github.com/andy-stewart-design/shdr"
        aria-label="Check out the Github repo"
      >
        <svg height="32" aria-hidden="true" viewBox="0 0 24 24" width="32">
          <path
            d="M12 1C5.9225 1 1 5.9225 1 12C1 16.8675 4.14875 20.9787 8.52125 22.4362C9.07125 22.5325 9.2775 22.2025 9.2775 21.9137C9.2775 21.6525 9.26375 20.7862 9.26375 19.865C6.5 20.3737 5.785 19.1912 5.565 18.5725C5.44125 18.2562 4.905 17.28 4.4375 17.0187C4.0525 16.8125 3.5025 16.3037 4.42375 16.29C5.29 16.2762 5.90875 17.0875 6.115 17.4175C7.105 19.0812 8.68625 18.6137 9.31875 18.325C9.415 17.61 9.70375 17.1287 10.02 16.8537C7.5725 16.5787 5.015 15.63 5.015 11.4225C5.015 10.2262 5.44125 9.23625 6.1425 8.46625C6.0325 8.19125 5.6475 7.06375 6.2525 5.55125C6.2525 5.55125 7.17375 5.2625 9.2775 6.67875C10.1575 6.43125 11.0925 6.3075 12.0275 6.3075C12.9625 6.3075 13.8975 6.43125 14.7775 6.67875C16.8813 5.24875 17.8025 5.55125 17.8025 5.55125C18.4075 7.06375 18.0225 8.19125 17.9125 8.46625C18.6138 9.23625 19.04 10.2125 19.04 11.4225C19.04 15.6437 16.4688 16.5787 14.0213 16.8537C14.42 17.1975 14.7638 17.8575 14.7638 18.8887C14.7638 20.36 14.75 21.5425 14.75 21.9137C14.75 22.2025 14.9563 22.5462 15.5063 22.4362C19.8513 20.9787 23 16.8537 23 12C23 5.9225 18.0775 1 12 1Z"
            fill="currentColor"></path>
        </svg>
      </a>
      <h1>Shdr<span>_</span></h1>
      <p>A lil WebGL library</p>
    </section>
    <section class="intro">
      <p>
        At the beginning of 2025, I set to out to learn more about writing
        shaders. I had tried this before, several times. I had tried reading
        <i>The Book of Shaders</i>—several times. Inevitably, though, I would
        get to <a href="https://thebookofshaders.com/05/"
          >the chapter on shaping functions</a
        >, get confused, and drop off.
      </p>
      <p>
        This time, I decided to take a different tack. I decided to learn by
        building, rather than leaning on some sort of structured course or text.
        My only precondition is that I didn't want to rely on a preexisting
        library to do the heavy lifting. I wanted as few layers of abstraction,
        and as little protection from rough edges, as possible.
      </p>
      <p>
        Basically, I gave myself permission to wander. No textbooks, no
        dependencies. Just MDN, a smattering of blog posts, a chatbot, and some
        time.
      </p>
      <p>
        The fruit of that work is a simple, mildly-opinionated WebGL library
        called Shdr. It won’t help you write shaders, per se, but it will help
        you render them without a lot of boilerplate or ceremony. You can <a
          href="https://github.com/andy-stewart-design/shdr"
        >
          see the source code and documentation
        </a>, or <a href="https://www.npmjs.com/package/shdr"
          >install it and try it out for yourself.</a
        >
      </p>
      <p>
        I don’t know if it will be useful to anyone else, but it was, and is,
        useful to me.
      </p>
      <p class="signature">
        <a href="https://andy-stew-dot-art.vercel.app/"
          ><svg
            width="36"
            height="36"
            viewBox="0 0 24 24"
            fill="none"
            class="logomark"
            data-astro-cid-j7pv25f6="true"
          >
            <circle cx="12" cy="5.5" r="3.5" fill="currentColor"></circle>
            <circle cx="19.5" cy="18.5" r="3.5" fill="currentColor"></circle>
            <circle cx="4.5" cy="18.5" r="3.5" fill="currentColor"></circle>
            <ellipse cx="7.5" cy="11.5" rx="2.5" ry="2.5" fill="currentColor"
            ></ellipse>
            <ellipse cx="12" cy="16.5" rx="2.5" ry="2.5" fill="currentColor"
            ></ellipse>
            <ellipse cx="16.5" cy="11.5" rx="2.5" ry="2.5" fill="currentColor"
            ></ellipse>
          </svg> Andy</a
        >
      </p>
    </section>
    {
      Object.entries(sketchesByCategory).map(([category, pages]) => (
        <section class="demo-section">
          <p class="category">{formatPathSegment(category)}</p>
          <ul>
            {pages?.map((page) => (
              <li>
                <a
                  href={page.href}
                  style="display: flex; align-items: center; gap: 1rem;"
                >
                  <img
                    src={page.imgSrc}
                    style="width: 80px; aspect-ratio: 1/1; border-radius: 0.75rem; vertical-align: bottom;"
                  />
                  {page.label}
                </a>
              </li>
            ))}
          </ul>
        </section>
      ))
    }
  </main>
</Layout>

<style>
  main {
    max-width: 640px;
    margin: 0 auto;
    padding: 2rem 1.5rem;
  }

  section {
    padding: 1.75rem 0 2.25rem;

    &.demo-section {
      border-top: 1px solid rgb(255 255 255 / 0.15);
    }

    &:first-of-type {
      padding: 5rem 0 1.5rem;
    }
  }

  .header {
    position: relative;
    display: flex;
    align-items: baseline;
    justify-content: space-between;

    h1 {
      font-family: "CabinetGrotesk";
      font-size: 3.5rem;
      font-weight: 850;
      margin: 0;

      span {
        margin-left: -0.2em;
      }

      @media (min-width: 640px) {
        font-size: 4rem;
      }
    }

    p {
      font-size: 0.875rem;
      font-weight: 500;
      opacity: 0.7;
      margin: 0;
    }

    .header-github {
      position: absolute;
      top: 0;
      right: 0;
    }
  }

  .intro {
    display: grid;
    gap: 1rem;
    border-top: 1px solid rgb(255 255 255 / 0.15);

    p {
      line-height: 1.6;
      margin: 0;
      color: rgb(255 255 255 / 0.65);
    }
    a {
      color: rgb(255 255 255 / 0.9);
    }
  }

  .category {
    font-size: 0.9375rem;
    font-weight: 500;
    opacity: 0.7;
    margin-top: 0;
    margin-bottom: 1.5rem;
  }

  ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    column-gap: 1rem;
    row-gap: 1.5rem;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  a {
    font-weight: 700;
    text-decoration: none;
    color: CanvasText;

    &:visited {
      color: CanvasText;
    }

    img {
      outline: 1px solid rgb(255 255 255 / 0.1);
    }
  }

  .nudge {
    margin-left: -0.25ch;
  }

  .signature {
    a {
      display: flex;
      align-items: center;
      gap: 0.625rem;
    }

    svg {
      width: 1.5rem;
      height: auto;
    }
  }
</style>
